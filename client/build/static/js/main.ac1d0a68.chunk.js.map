{"version":3,"sources":["ui/theme/NotoSans-Bold.ttf","ui/theme/index.js","components/Button/Button.js","constants.js","components/Cart/CartButton.js","components/Header/SubHeader.js","components/Cart/AddToCartButton.js","components/Products/ProductItem.js","components/Cart/Totals.js","components/Cart/Cart.js","components/Products/Filter.js","components/Products/Products.js","components/Appbar/Appbar.js","components/Header/Header.js","components/Checkout/Login.js","components/Checkout/Checkout.js","components/App.js","serviceWorker.js","index.js","ui/theme/NotoSans-Regular.ttf","components/Header/header-bg.png"],"names":["module","exports","notoSans","fontFamily","fontStyle","fontDisplay","fontWeight","src","NotoSansRegular","typography","join","overrides","MuiCssBaseline","createMuiTheme","palette","primary","main","secondary","themeName","ButtonWrapper","styled","button","color","Button","children","onClick","defaultProps","COMPLETE_CART","gql","LOGIN_USER","GET_LIMIT","GET_PRODUCTS","GET_CART_TOTAL","GET_CART","ADD_TO_CART","CartButton","query","loading","error","data","cart","total","SubHeaderWrapper","div","Title","h2","SubHeaderButton","SubHeader","goBack","title","goToCart","AddToCartButton","productId","mutation","refetchQueries","addToCart","variables","ProductItemWrapper","h3","Thumbnail","img","ProductItem","thumbnail","width","id","TotalsWrapper","Total","span","Totals","count","CartWrapper","CartItemsWrapper","Alert","Cart","history","push","products","map","product","key","length","to","withApollo","limit","client","htmlFor","value","onChange","e","writeData","target","ProductItemsWrapper","Products","parseInt","productData","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","Appbar","classes","React","useState","auth","anchorEl","setAnchorEl","open","Boolean","handleClose","className","AppBar","position","Toolbar","IconButton","edge","aria-label","Typography","variant","aria-controls","aria-haspopup","event","currentTarget","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","onClose","MenuItem","gridItem","margin","mainFeaturedPost","backgroundColor","background","default","text","marginBottom","backgroundSize","backgroundRepeat","backgroundPosition","mainFeaturedPostContent","padding","breakpoints","up","paddingRight","HeaderBg","HeaderBgImg","alt","style","Header","props","post","Grid","container","item","md","component","gutterBottom","paragraph","description","Link","href","linkText","imageText","LoginWrapper","TextInput","input","Login","useMutation","loginUser","userName","setUserName","password","setPassword","placeholder","a","username","token","sessionStorage","setItem","alert","CheckoutWrapper","Checkout","completeCart","complete","isAuthenticated","getItem","cache","InMemoryCache","httpLink","HttpLink","uri","authLink","setContext","_","headers","authorization","ApolloClient","link","concat","resolvers","typeDefs","App","CssBaseline","ThemeProvider","Theme","exact","path","render","isLocalhost","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","ReactDOM","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.ac1d0a68.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/NotoSans-Bold.98f0cacc.ttf\";","import { createMuiTheme } from '@material-ui/core/styles';\r\nimport NotoSansBold from './NotoSans-Bold.ttf';\r\nimport NotoSansRegular from './NotoSans-Regular.ttf';\r\n\r\nconst notoSans = {\r\n  fontFamily: 'Noto Sans',\r\n  fontStyle: 'normal',\r\n  fontDisplay: 'swap',\r\n  fontWeight: 400,\r\n  src: `\r\n    local('Noto Sans'),\r\n    local('NotoSans-Regular'),\r\n    url(${NotoSansRegular}) format('ttf')\r\n  `,\r\n};\r\n\r\nconst palette = {\r\n  primary: { main: '#f99028' },\r\n  secondary: { main: '#2490ff' },\r\n};\r\n\r\nconst typography = {\r\n  fontFamily: ['\"Noto Sans\"', 'Algerian'].join(','),\r\n  overrides: {\r\n    MuiCssBaseline: {\r\n      '@global': {\r\n        '@font-face': [notoSans],\r\n      },\r\n    },\r\n  },\r\n};\r\n\r\nconst themeName = 'Sea Buckthorn Dodger Blue Goats';\r\n\r\nexport default createMuiTheme({ palette, typography, themeName });\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst ButtonWrapper = styled.button`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background: transparent;\r\n  color: ${({ color }) => color || 'white'};\r\n  padding: 10px;\r\n  line-height: 2;\r\n  border-radius: 5px;\r\n  font-weight: bold;\r\n  border: 4px solid ${({ color }) => color || 'white'};\r\n  font-size: inherit;\r\n  cursor: pointer;\r\n  text-decoration: none;\r\n`;\r\n\r\nconst Button = ({ children, color, onClick }) => (\r\n  <ButtonWrapper color={color} onClick={onClick}>\r\n    {children}\r\n  </ButtonWrapper>\r\n);\r\n\r\nButton.propTypes = {\r\n  children: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  color: PropTypes.string,\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nButton.defaultProps = {\r\n  color: 'white',\r\n};\r\n\r\nexport default Button;\r\n","import gql from 'graphql-tag';\r\n\r\nexport const COMPLETE_CART = gql`\r\n  mutation completeCart {\r\n    completeCart {\r\n      complete\r\n    }\r\n  }\r\n`;\r\n\r\nexport const LOGIN_USER = gql`\r\n  mutation loginUser($username: String!, $password: String!) {\r\n    loginUser(userName: $username, password: $password) {\r\n      userName\r\n      token\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_LIMIT = gql`\r\n  query getLimit {\r\n    limit @client\r\n  }\r\n`;\r\n\r\nexport const GET_PRODUCTS = gql`\r\n  query getProducts($limit: Int) {\r\n    products(limit: $limit) {\r\n      id\r\n      title\r\n      thumbnail\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_CART_TOTAL = gql`\r\n  query getCartTotal {\r\n    cart {\r\n      total\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_CART = gql`\r\n  query getCart {\r\n    cart {\r\n      total\r\n      products {\r\n        id\r\n        title\r\n        thumbnail\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ADD_TO_CART = gql`\r\n  mutation addToCart($productId: Int!) {\r\n    addToCart(input: { productId: $productId }) {\r\n      total\r\n    }\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Query } from 'react-apollo';\r\nimport Button from '../Button/Button';\r\nimport { GET_CART_TOTAL } from '../../constants';\r\n\r\nconst CartButton = ({ onClick }) => (\r\n  <Query query={GET_CART_TOTAL}>\r\n    {({ loading, error, data }) => (\r\n      <Button onClick={onClick}>\r\n        {`Cart (${loading || error ? 0 : data && data.cart.total})`}\r\n      </Button>\r\n    )}\r\n  </Query>\r\n);\r\n\r\nCartButton.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default CartButton;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Button from '../Button/Button';\r\nimport CartButton from '../Cart/CartButton';\r\n\r\nconst SubHeaderWrapper = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  background: cornflowerBlue;\r\n`;\r\n\r\nconst Title = styled.h2`\r\n  text-align: center;\r\n  flex-basis: 60%;\r\n\r\n  &:first-child {\r\n    margin-left: 20%;\r\n  }\r\n\r\n  &:last-child {\r\n    margin-right: 20%;\r\n  }\r\n`;\r\n\r\nconst SubHeaderButton = styled(Button)`\r\n  margin: 10px 5%;\r\n`;\r\n\r\nconst SubHeader = ({ goBack, title, goToCart = false }) => (\r\n  <SubHeaderWrapper>\r\n    {goBack && (\r\n      <SubHeaderButton onClick={goBack}>{`< Go Back`}</SubHeaderButton>\r\n    )}\r\n    <Title>{title}</Title>\r\n    {goToCart && <CartButton onClick={goToCart} />}\r\n  </SubHeaderWrapper>\r\n);\r\n\r\nexport default SubHeader;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Mutation } from 'react-apollo';\r\nimport Button from '../Button/Button';\r\nimport { ADD_TO_CART, GET_CART, GET_CART_TOTAL } from '../../constants';\r\n\r\nconst AddToCartButton = ({ productId }) => (\r\n  <Mutation\r\n    mutation={ADD_TO_CART}\r\n    refetchQueries={[{ query: GET_CART }, { query: GET_CART_TOTAL }]}>\r\n    {addToCart => (\r\n      <Button onClick={() => addToCart({ variables: { productId } })}>+ Add to Cart</Button>\r\n    )}\r\n  </Mutation>\r\n);\r\n\r\nAddToCartButton.propTypes = {\r\n  productId: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default AddToCartButton;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport AddToCartButton from '../Cart/AddToCartButton';\r\n\r\nconst ProductItemWrapper = styled.div`\r\n  display: flex;\r\n  text-align: left;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 1%;\r\n  background: lightGray;\r\n  border-radius: 5px;\r\n  padding: 10px;\r\n  margin-bottom: 2%;\r\n  text-decoration: none;\r\n`;\r\n\r\nconst Title = styled.h3`\r\n  margin-left: 2%;\r\n`;\r\n\r\nconst Thumbnail = styled.img`\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst ProductItem = ({ data }) => (\r\n  <ProductItemWrapper>\r\n    <Thumbnail src={data.thumbnail} width={200} />\r\n    <Title>{data.title}</Title>\r\n    <AddToCartButton productId={data.id} />\r\n  </ProductItemWrapper>\r\n);\r\n\r\nProductItem.propTypes = {\r\n  data: PropTypes.shape({\r\n    thumbnail: PropTypes.string.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    id: PropTypes.number.isRequired,\r\n  }).isRequired,\r\n};\r\n\r\nexport default ProductItem;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst TotalsWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  padding: 1%;\r\n  background: gray;\r\n  border-radius: 5px;\r\n  padding: 10px;\r\n  margin-bottom: 2%;\r\n`;\r\n\r\nconst Total = styled.span`\r\n  width: 100%;\r\n  font-size: 18px;\r\n  color: white;\r\n  font-weight: bold;\r\n  text-align: right;\r\n`;\r\n\r\nconst Totals = ({ count }) => (\r\n  <TotalsWrapper>\r\n    <Total>{`Total products: ${count}`}</Total>\r\n  </TotalsWrapper>\r\n);\r\n\r\nexport default Totals;\r\n","import React from 'react';\r\nimport ReactRouterPropTypes from 'react-router-prop-types';\r\nimport styled from 'styled-components';\r\nimport { Query } from 'react-apollo';\r\nimport { Link } from 'react-router-dom';\r\nimport SubHeader from '../Header/SubHeader';\r\nimport ProductItem from '../Products/ProductItem';\r\nimport Button from '../Button/Button';\r\nimport Totals from './Totals';\r\nimport { GET_CART } from '../../constants';\r\n\r\nconst CartWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  flex-direction: column;\r\n  margin: 2% 5%;\r\n`;\r\n\r\nconst CartItemsWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst Alert = styled.span`\r\n  width: 100%;\r\n  text-align: center;\r\n`;\r\n\r\nconst Cart = ({ history }) => (\r\n  <>\r\n    {history && <SubHeader title=\"Cart\" goToCart={() => history.push('/cart')} />}\r\n    <Query query={GET_CART}>\r\n      {({ loading, error, data }) => {\r\n        if (loading || error) {\r\n          return <Alert>{loading ? 'Loading...' : error}</Alert>;\r\n        }\r\n        return (\r\n          <CartWrapper>\r\n            <CartItemsWrapper>\r\n              {data.cart &&\r\n                data.cart.products.map(product => <ProductItem key={product.id} data={product} />)}\r\n            </CartItemsWrapper>\r\n            <Totals count={data.cart.total} />\r\n            {data.cart && data.cart.products.length > 0 && (\r\n              <Link to=\"/checkout\">\r\n                <Button color=\"royalBlue\">Checkout</Button>\r\n              </Link>\r\n            )}\r\n          </CartWrapper>\r\n        );\r\n      }}\r\n    </Query>\r\n  </>\r\n);\r\n\r\nCart.propTypes = {\r\n  history: ReactRouterPropTypes.history.isRequired,\r\n};\r\n\r\nexport default Cart;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withApollo } from 'react-apollo';\r\n\r\nconst Filter = ({ limit, client }) => (\r\n  <>\r\n    <label htmlFor=\"limit\">Number of products: </label>{' '}\r\n    <select\r\n      id=\"limit\"\r\n      value={limit}\r\n      onChange={e => client.writeData({ data: { limit: e.target.value } })}>\r\n      <option value={5}>5</option>\r\n      <option value={10}>10</option>\r\n      <option value={20}>20</option>\r\n    </select>\r\n  </>\r\n);\r\n\r\nFilter.propTypes = {\r\n  limit: PropTypes.number.isRequired,\r\n  client: PropTypes.shape({\r\n    writeData: PropTypes.func.isRequired,\r\n  }).isRequired,\r\n};\r\n\r\nexport default withApollo(Filter);\r\n","import React from 'react';\r\nimport ReactRouterPropTpes from 'react-router-prop-types';\r\nimport styled from 'styled-components';\r\nimport { Query } from 'react-apollo';\r\nimport SubHeader from '../Header/SubHeader';\r\nimport ProductItem from './ProductItem';\r\nimport Filter from './Filter';\r\nimport { GET_PRODUCTS, GET_LIMIT } from '../../constants';\r\n\r\nconst ProductItemsWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  flex-wrap: wrap;\r\n  flex-direction: column;\r\n  margin: 2% 5%;\r\n`;\r\n\r\nconst Alert = styled.span`\r\n  width: 100%;\r\n  text-align: center;\r\n`;\r\n\r\nconst Products = ({ history }) => (\r\n  <>\r\n    {history && <SubHeader title=\"Available products\" goToCart={() => history.push('/cart')} />}\r\n    <Query query={GET_LIMIT}>\r\n      {({ data }) => (\r\n        <>\r\n          <Filter limit={parseInt(data.limit, 10)} />\r\n          <Query query={GET_PRODUCTS} variables={{ limit: parseInt(data.limit, 10) }}>\r\n            {({ loading, error, data: productData }) => {\r\n              if (loading || error) {\r\n                return <Alert>{loading ? 'Loading...' : error}</Alert>;\r\n              }\r\n              return (\r\n                <ProductItemsWrapper>\r\n                  {productData.products &&\r\n                    productData.products.map(product => (\r\n                      <ProductItem key={product.id} data={product} />\r\n                    ))}\r\n                </ProductItemsWrapper>\r\n              );\r\n            }}\r\n          </Query>\r\n        </>\r\n      )}\r\n    </Query>\r\n  </>\r\n);\r\n\r\nProducts.propTypes = {\r\n  history: ReactRouterPropTpes.history.isRequired,\r\n};\r\n\r\nexport default Products;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nconst Appbar = () => {\r\n  const classes = useStyles();\r\n  const [auth, setAuth] = React.useState(true);\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n  const handleMenu = event => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            Photos\r\n          </Typography>\r\n          {auth && (\r\n            <div>\r\n              <IconButton\r\n                aria-label=\"account of current user\"\r\n                aria-controls=\"menu-appbar\"\r\n                aria-haspopup=\"true\"\r\n                onClick={handleMenu}\r\n                color=\"inherit\"\r\n              >\r\n                <AccountCircle />\r\n              </IconButton>\r\n              <Menu\r\n                id=\"menu-appbar\"\r\n                anchorEl={anchorEl}\r\n                anchorOrigin={{\r\n                  vertical: 'top',\r\n                  horizontal: 'right',\r\n                }}\r\n                keepMounted\r\n                transformOrigin={{\r\n                  vertical: 'top',\r\n                  horizontal: 'right',\r\n                }}\r\n                open={open}\r\n                onClose={handleClose}\r\n              >\r\n                <MenuItem onClick={handleClose}>Profile</MenuItem>\r\n                <MenuItem onClick={handleClose}>My account</MenuItem>\r\n              </Menu>\r\n            </div>\r\n          )}\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Appbar;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Link from '@material-ui/core/Link';\r\nimport HeaderBgImg from './header-bg.png';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  gridItem: {\r\n    margin: 'auto',\r\n  },\r\n  mainFeaturedPost: {\r\n    position: 'relative',\r\n    backgroundColor: theme.palette.background.default,\r\n    color: theme.palette.text.primary,\r\n    marginBottom: theme.spacing(4),\r\n    backgroundSize: 'cover',\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundPosition: 'center',\r\n  },\r\n  mainFeaturedPostContent: {\r\n    position: 'relative',\r\n    padding: theme.spacing(5),\r\n    [theme.breakpoints.up('md')]: {\r\n      padding: theme.spacing(6),\r\n      paddingRight: 0,\r\n    },\r\n  },\r\n}));\r\n\r\nconst HeaderBg = () => {\r\n  return <img src={HeaderBgImg} alt=\"Header\" style={{ width: '100%' }} />;\r\n};\r\n\r\nconst Header = props => {\r\n  const classes = useStyles();\r\n  const { post } = props;\r\n\r\n  return (\r\n    <Grid container className={classes.mainFeaturedPost}>\r\n      <Grid item md={6} classes={{ item: classes.gridItem }}>\r\n        <div className={classes.mainFeaturedPostContent}>\r\n          <Typography component=\"h1\" variant=\"h3\" color=\"inherit\" gutterBottom>\r\n            {post.title}\r\n          </Typography>\r\n          <Typography variant=\"h5\" color=\"inherit\" paragraph>\r\n            {post.description}\r\n          </Typography>\r\n          <Link variant=\"subtitle1\" href=\"#\">\r\n            {post.linkText}\r\n          </Link>\r\n        </div>\r\n      </Grid>\r\n      <Grid item md={6}>\r\n        <HeaderBg />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  post: PropTypes.object,\r\n};\r\n\r\nHeader.defaultProps = {\r\n  post: {\r\n    imageText: HeaderBg,\r\n    title: 'shopping',\r\n    description: 'the place to shop',\r\n    linkText: '',\r\n  },\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport ReactRouterPropTypes from 'react-router-prop-types';\r\nimport styled from 'styled-components';\r\nimport { useMutation } from 'react-apollo';\r\nimport Button from '../Button/Button';\r\nimport { LOGIN_USER } from '../../constants';\r\n\r\nconst LoginWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  flex-direction: column;\r\n  width: 30%;\r\n  margin: 2% auto;\r\n`;\r\n\r\nconst TextInput = styled.input`\r\n  padding: 18px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-around;\r\n  border-radius: 5px;\r\n  border: 1px solid #ccc;\r\n  background-color: #fff;\r\n  font-size: 16px;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst Login = ({ history }) => {\r\n  const [loginUser] = useMutation(LOGIN_USER);\r\n  const [userName, setUserName] = React.useState('');\r\n  const [password, setPassword] = React.useState('');\r\n\r\n  return (\r\n    <LoginWrapper>\r\n      <TextInput\r\n        onChange={e => setUserName(e.target.value)}\r\n        value={userName}\r\n        placeholder=\"Your username\"\r\n      />\r\n      <TextInput\r\n        onChange={e => setPassword(e.target.value)}\r\n        value={password}\r\n        placeholder=\"Your password\"\r\n      />\r\n      <Button\r\n        color=\"royalBlue\"\r\n        onClick={async () => {\r\n          const { data } = await loginUser({\r\n            variables: { username: userName, password },\r\n          });\r\n\r\n          if (data.loginUser && data.loginUser.token) {\r\n            sessionStorage.setItem('token', data.loginUser.token);\r\n            return history.push('/checkout');\r\n          }\r\n          return alert('Please provide (valid) authentication details.');\r\n        }}>\r\n        Login\r\n      </Button>\r\n    </LoginWrapper>\r\n  );\r\n};\r\n\r\nLogin.propTypes = {\r\n  history: ReactRouterPropTypes.history.isRequired,\r\n};\r\n\r\nexport default Login;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { useMutation } from 'react-apollo';\r\nimport Button from '../Button/Button';\r\nimport { COMPLETE_CART } from '../../constants';\r\n\r\nconst CheckoutWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  flex-direction: column;\r\n  margin: 2% 5%;\r\n`;\r\n\r\nconst Checkout = () => {\r\n  const [completeCart, { data }] = useMutation(COMPLETE_CART);\r\n  return (\r\n    <CheckoutWrapper>\r\n      {data && data.completeCart.complete ? (\r\n        <p>Checkout completed successfully</p>\r\n      ) : (\r\n        <>\r\n          <p>This is the checkout, press the button below to complete:</p>\r\n          <Button color=\"royalBlue\" onClick={completeCart}>\r\n            Complete checkout\r\n          </Button>\r\n        </>\r\n      )}\r\n    </CheckoutWrapper>\r\n  );\r\n};\r\n\r\nexport default Checkout;\r\n","import React from 'react';\r\nimport { ThemeProvider } from '@material-ui/core';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport { Route, Switch, Redirect } from 'react-router-dom';\r\nimport ApolloClient from 'apollo-client';\r\nimport { InMemoryCache } from 'apollo-cache-inmemory';\r\nimport { HttpLink } from 'apollo-link-http';\r\nimport { ApolloProvider } from 'react-apollo';\r\nimport { setContext } from 'apollo-link-context';\r\nimport * as Theme from '../ui/theme/index';\r\nimport Cart from './Cart/Cart';\r\nimport Products from './Products/Products';\r\nimport Appbar from './Appbar/Appbar';\r\nimport Header from './Header/Header';\r\nimport Login from './Checkout/Login';\r\nimport Checkout from './Checkout/Checkout';\r\n\r\nconst isAuthenticated = sessionStorage.getItem('token');\r\n\r\nconst cache = new InMemoryCache();\r\n\r\nconst httpLink = new HttpLink({\r\n  uri: 'http://localhost:4000/graphql',\r\n});\r\n\r\nconst authLink = setContext((_, { headers }) => {\r\n  const token = isAuthenticated;\r\n\r\n  return {\r\n    headers: {\r\n      ...headers,\r\n      authorization: token ? `Bearer ${token}` : '',\r\n    },\r\n  };\r\n});\r\n\r\nconst client = new ApolloClient({\r\n  link: authLink.concat(httpLink),\r\n  cache,\r\n  resolvers: {},\r\n  typeDefs: `\r\n    extend type Query {\r\n      limit: Int!\r\n    }\r\n  `,\r\n});\r\n\r\ncache.writeData({\r\n  data: {\r\n    limit: 5,\r\n  },\r\n});\r\n\r\nconst App = () => (\r\n  <ApolloProvider client={client}>\r\n    <CssBaseline />\r\n    <ThemeProvider theme={Theme.default}>\r\n      <Appbar />\r\n      <Header />\r\n      <Switch>\r\n        <Route exact path=\"/\" component={Products} />\r\n        <Route path=\"/cart\" component={Cart} />\r\n        <Route\r\n          path=\"/checkout\"\r\n          render={() => (isAuthenticated ? <Checkout /> : <Redirect to=\"/login/\" />)}\r\n        />\r\n        <Route path=\"/login/\" component={Login} />\r\n      </Switch>\r\n    </ThemeProvider>\r\n  </ApolloProvider>\r\n);\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\r\n    ),\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.',\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <Router>\r\n    <App />\r\n  </Router>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n","module.exports = __webpack_public_path__ + \"static/media/NotoSans-Regular.5a87cce8.ttf\";","module.exports = __webpack_public_path__ + \"static/media/header-bg.08aaf026.png\";"],"sourceRoot":""}