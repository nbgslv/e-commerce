{"version":3,"sources":["ui/theme/NotoSans-Regular.ttf","ui/theme/NotoSans-Bold.ttf","components/Header/header-bg.png","components/Checkout/temsandconditions.md","components/Error/Error.js","ui/theme/index.js","reducer/productsReducer.js","context/ProductsContext.js","utils/localStorage.js","reducer/userReducer.js","context/UserContext.js","components/Cart/CartItems.js","constants.js","components/Cart/Cart.js","components/Header/SubHeader.js","components/Products/ProductItem.js","components/Products/SkeletonProducts.js","components/Products/Filter.js","components/Products/Products.js","components/Appbar/CartMenu.js","components/Appbar/UserMenu.js","components/Appbar/Appbar.js","components/Header/Header.js","components/Snackbar/CustomSnackbar.js","components/Login/Login.js","components/Checkout/Products.js","components/Checkout/GuestDetails.js","components/Checkout/DelveryDetails.js","components/Checkout/StripeButton.js","components/Checkout/Checkout.js","containers/App.js","serviceWorker.js","index.js"],"names":["module","exports","Error","errorCode","errorMessage","Paper","elevation","Typography","variant","color","notoSansRegular","fontFamily","fontStyle","fontDisplay","fontWeight","src","NotoSansRegular","notoSansBold","NotoSansBold","typography","join","overrides","MuiCssBaseline","createMuiTheme","palette","primary","main","secondary","themeName","productsReducer","state","action","type","products","ProductsContext","React","createContext","ProductsContextProvider","children","useReducer","dispatch","Provider","value","getUser","Cookies","get","NEW_CART","total","getCart","JSON","parse","localStorage","getItem","setCart","newCart","setItem","stringify","addProductToCart","shopProduct","productAdded","cart","productExists","map","product","_id","toString","quantity","push","removeProductFromCart","productId","updatedProducts","filter","changeQuantity","lastQuantity","user","guest","cartChanged","UserContext","initializeState","UserContextProvider","userReducer","CartItems","productsData","removeItem","options","showFirstLastPageButtons","search","sorting","draggable","emptyRowsWhenPaging","padding","pageSizeOptions","pageSize","headerStyle","actionsCellStyle","title","columns","field","render","rowData","min","max","onChange","valueAsNumber","data","components","Pagination","props","count","rowsPerPage","actions","icon","tooltip","onClick","event","GET_CATEGORIES","gql","GET_CART","GET_USER","LOGIN_USER","LOGOUT_USER","ADD_TO_CART","REMOVE_FROM_CART","CHANGE_QUANTITY","EMPTY_CART","CART_CHANGED","GET_LIMIT","GET_PRODUCTS","ADD_RATING","useStyles","makeStyles","card","margin","ProductsTableWrapper","styled","Cart","history","classes","useState","totalForPayment","setTotalForPayment","useContext","useEffect","totalForPaymentCalculation","price","Math","round","computeTotal","useMutation","removeFromCart","handleRemoveItem","a","variables","handleQuantityChange","changeLocalQuantity","Card","className","CardContent","CardActions","Button","theme","root","grey","fontSize","transition","paddingLeft","SubHeader","Box","query","loading","error","categories","category","Link","href","key","maxWidth","ratingIconButton","media","width","content","paddingBottom","whiteSpace","display","justifyContent","ProductItem","imageLoading","setImageLoading","voters","rating","setRating","hover","setHover","Boolean","Skeleton","animation","style","height","onLoad","thumbnail","alt","gutterBottom","align","mutation","update","cache","updateProductRating","called","iconButton","id","ignoreResults","addToCart","onMouseEnter","onMouseOver","e","stopPropagation","onMouseLeave","onFocus","onBlur","Fade","in","timeout","buttons","SkeletonProducts","limit","Array","fill","Grid","item","md","gridItem","maxHeight","withApollo","client","Select","writeData","target","spacing","Alert","Products","useQuery","container","alignItems","parseInt","textDecoration","list","CartMenu","anchorEl","open","onClose","emptyCart","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","MenuItem","to","Divider","UserMenu","logout","flexGrow","button","menuButton","marginRight","StyledBadge","withStyles","badge","right","top","border","background","paper","Badge","Appbar","useSubscription","updatedCart","cartItemAddedLoading","remove","anchorElCart","setAnchorElCart","anchorElUser","setAnchorElUser","handleEmptyCart","logoutUser","AppBar","position","Toolbar","IconButton","edge","aria-label","disableElevation","aria-haspopup","currentTarget","badgeContent","mainFeaturedPost","backgroundColor","default","text","marginTop","marginBottom","backgroundSize","backgroundRepeat","backgroundPosition","mainFeaturedPostContent","breakpoints","up","paddingRight","HeaderBg","HeaderBgImg","Header","post","component","paragraph","description","linkText","defaultProps","imageText","CustomSnackbars","severity","message","Snackbar","autoHideDuration","form","flexDirection","input","Login","loginUser","email","setEmail","password","setPassword","setOpen","setMessage","setSeverity","useForm","register","handleSubmit","errors","onSubmit","errorPolicy","refetchQueries","success","set","expires","goBack","TextField","name","placeholder","inputProps","ref","required","pattern","helperText","CustomSnackbar","Table","TableHead","TableCell","TableBody","TableRow","colSpan","GuestDetails","handleBack","handleNext","firstName","setFirstName","lastName","setLastName","selectedDate","setSelectedDate","with","FormControl","FormLabel","utils","DateFnsUtils","label","format","date","KeyboardButtonProps","DelveryDetails","setAdrress","firmName","setFirmName","recipientName","setRecipientName","address1","setAddress1","address2","setAddress2","country","setCountry","city","setCity","zipcode","setZipcode","recepientName","CountryByAbriviation","abbreviation","disabled","validate","postalCodes","CARD_ELEMENT_OPTIONS","base","fontSmoothing","invalid","iconColor","StripeButton","address","totalPayment","stripe","useStripe","elements","useElements","handleServerResponse","response","requires_action","handleCardAction","payment_intent_client_secret","errorAction","paymentIntent","fetch","method","headers","body","payment_intent_id","payment_total","serverResponse","json","console","log","stripePaymentMethodHandler","result","payment_method_id","paymentMethod","res","paymentResponse","handlePayment","preventDefault","createPaymentMethod","getElement","CardElement","billing_details","line1","line2","postal_code","actionsContainer","resetContainer","Checkout","items","termsAndConditions","setTermsAndConditions","steps","getTermsAndConditions","mdFile","require","then","marked","catch","guestForm","setGuestForm","activeStep","setActiveStep","setAddress","prevActiveStep","hideButton","setHideButton","stripePromise","loadStripe","stepButton","step","labelLeft","functionLeft","labelRight","functionRight","stepsContent","deliveryAddress","handleSetAddress","dangerouslySetInnerHTML","__html","overflowY","Stepper","orientation","index","Step","StepLabel","StepContent","length","square","InMemoryCache","httpLink","HttpLink","uri","credentials","wsLink","WebSocketLink","reconnect","errorLink","onError","graphQLErrors","networkError","locations","path","extensions","code","splitLink","split","definition","getMainDefinition","kind","operation","ApolloClient","link","concat","resolvers","typeDefs","connectToDevTools","App","location","useLocation","cartTotal","setCartTotal","itemsForCheckout","setItemsForCheckout","handleUpdateCartTotal","handleSendItemsToCheckout","handleSetTotalForPayment","CssBaseline","ThemeProvider","Theme","updateEmptyLocalCart","changeToLocalCart","pathname","exact","updateTotal","updateCartTotal","isLocalhost","window","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","document","getElementById","URL","process","origin","addEventListener","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"2HAAAA,EAAOC,QAAU,IAA0B,8C,oBCA3CD,EAAOC,QAAU,IAA0B,2C,oBCA3CD,EAAOC,QAAU,IAA0B,uC,gFCA3CD,EAAOC,QAAU,IAA0B,8C,mOCqB5BC,EAhBD,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,UAAWC,EAAmB,EAAnBA,aAC1B,OACE,kBAACC,EAAA,EAAD,CAAOC,UAAW,GAChB,kBAACC,EAAA,EAAD,CAAYC,QAAQ,UAAUC,MAAM,WACjCN,GAEH,kBAACI,EAAA,EAAD,CAAYC,QAAQ,SAASJ,K,6CCP7BM,EAAkB,CACtBC,WAAY,YACZC,UAAW,SACXC,YAAa,OACbC,WAAY,IACZC,IAAI,sEAAD,OAGKC,IAHL,wBAOCC,EAAe,CACnBN,WAAY,iBACZC,UAAW,SACXC,YAAa,OACbC,WAAY,SACZC,IAAI,mEAAD,OAGKG,IAHL,wBAYCC,EAAa,CACjBR,WAAY,CAAC,cAAe,WAAY,eAAeS,KAAK,KAC5DC,UAAW,CACTC,eAAgB,CACd,UAAW,CACT,aAAc,CAACZ,EAAiBO,OAQzBM,cAAe,CAAEC,QAlBhB,CACdC,QAAS,CAAEC,KAAM,WACjBC,UAAW,CAAED,KAAM,YAgBoBP,aAAYS,UAFnC,oCCnCHC,EATS,SAACC,EAAOC,GAC9B,OAAQA,EAAOC,MACb,IAAK,eACH,OAAOD,EAAOE,SAChB,QACE,OAAOH,ICDAI,EAAkBC,IAAMC,gBAatBC,EAXiB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACtBH,IAAMI,WAAWV,EAAiB,CAAEI,SAAU,KADxB,mBACzCH,EADyC,KAClCU,EADkC,KAEhD,OACE,kBAACN,EAAgBO,SAAjB,CAA0BC,MAAO,CAAEZ,QAAOU,aAAaF,I,SCP9CK,EAAU,kBAAMC,IAAQC,IAAI,aAQnCC,EAAW,CAAEC,MAAO,EAAGd,SAAU,IAE1Be,EAAU,kBAAMC,KAAKC,MAAMC,aAAaC,QAAQ,UAEhDC,EAAU,SAACC,GAAD,IAAUP,EAAV,uDAAkB,EAAGd,EAArB,uDAAgC,GAAhC,OACrBkB,aAAaI,QAAQ,OAAQN,KAAKO,UAAUF,EAAUR,EAAW,CAAEC,QAAOd,eAE/DwB,EAAmB,SAAAC,GAC9B,IACIC,EADEC,EAAOZ,IAETa,GAAgB,EAiBpB,OAhBAD,EAAK3B,SAAS6B,KAAI,SAAAC,GAChB,OAAIA,EAAQC,IAAIC,aAAeP,EAAYM,IAAIC,aAC7CF,EAAQG,UAAY,EACpBL,GAAgB,EAChBF,EAAeI,GACR,MAINF,IACHH,EAAYQ,SAAW,EACvBN,EAAK3B,SAASkC,KAAKT,GACnBC,EAAeD,GAEjBE,EAAKb,OAAS,EACdM,GAAQ,EAAOO,EAAKb,MAAOa,EAAK3B,UACzB0B,GAGIS,EAAwB,SAAAC,GACnC,IAAMT,EAAOZ,IACTkB,EAAW,EACTI,EAAkBV,EAAK3B,SAASsC,QAAO,SAAAR,GAC3C,OAAIA,EAAQC,MAAQK,IAGpBH,EAAWH,EAAQG,UACZ,MAKT,OAHAN,EAAKb,OAASmB,EACdN,EAAK3B,SAAWqC,EAChBjB,GAAQ,EAAOO,EAAKb,MAAOa,EAAK3B,UACzB2B,GAGIY,EAAiB,SAACH,EAAWH,GACxC,IACIO,EADEb,EAAOZ,IAYb,OAVAY,EAAK3B,SAAS6B,KAAI,SAAAC,GAChB,OAAIA,EAAQC,IAAIC,aAAeI,EAAUJ,aACvCQ,EAAeV,EAAQG,SACvBH,EAAQG,SAAWA,GACZ,MAIXN,EAAKb,OAASmB,EAAWO,EACzBpB,GAAQ,EAAOO,EAAKb,MAAOa,EAAK3B,UACzB2B,GCLM/B,EA9DS,SAACC,EAAOC,GAC9B,OAAQA,EAAOC,MACb,IAAK,WACH,MAAO,CACL0C,KAAK,aACHC,OAAO,GACJ5C,EAAO2C,OAGhB,IAAK,YAOL,IAAK,cACH,MAAO,CACLA,KAAM,CACJC,OAAO,EACPf,KAAMZ,MAGZ,IAAK,cACH,MAAO,CACL0B,KAAK,2BACA5C,EAAM4C,MADP,IAEFd,KAAM7B,EAAO6B,KAAKgB,eAGxB,IAAK,sBACH,IAAIf,GAAgB,EAUpB,OATA/B,EAAM4C,KAAKd,KAAK3B,SAAS6B,KAAI,SAAAC,GAK3B,OAJIA,EAAQC,MAAQjC,EAAOgC,QAAQC,MACjCD,EAAQG,UAAY,EACpBL,GAAgB,IAEX,KAET/B,EAAM4C,KAAKd,KAAKb,OAAS,EACpBc,GAAe/B,EAAM4C,KAAKd,KAAK3B,SAASkC,KAAKpC,EAAOgC,SAClD,CACLW,KAAK,2BACA5C,EAAM4C,MADP,IAEFd,KAAK,eAAM9B,EAAM4C,KAAKd,SAG5B,IAAK,aACH,MAAO,CACLc,KAAK,2BACA5C,EAAM4C,MADP,IAEFd,KAAM,CACJb,MAAO,EACPd,SAAU,OAIlB,QACE,OAAOH,ICxDA+C,EAAc1C,IAAMC,gBAE3B0C,EAAkB,CACtBJ,KAAM,CACJC,OAAO,EACPf,KAAM,CACJb,MAAO,EACPd,SAAU,MAcD8C,EATa,SAAC,GAAkB,IAAhBzC,EAAe,EAAfA,SAAe,EAClBH,IAAMI,WAAWyC,EAAaF,GADZ,mBACrChD,EADqC,KAC9BU,EAD8B,KAE5C,OAAO,kBAACqC,EAAYpC,SAAb,CAAsBC,MAAO,CAAEZ,QAAOU,aAAaF,I,oKCiD7C2C,GA7DG,SAAC,GAAD,IAAGC,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,WAAYX,EAA7B,EAA6BA,eAA7B,OAChB,kBAAC,KAAD,CACEY,QAAS,CACPC,0BAA0B,EAC1BC,QAAQ,EACRC,SAAS,EACTC,WAAW,EACXC,qBAAqB,EACrBC,QAAS,QACTC,gBAAiB,GACjBC,SAAU,GACVC,YAAa,CACX/E,WAAY,OAEdgF,iBAAkB,CAChBJ,QAAS,WAGbK,MAAM,eACNC,QAAS,CACP,CAAED,MAAO,UAAWE,MAAO,SAC3B,CAAEF,MAAO,QAASE,MAAO,SACzB,CACEF,MAAO,WACPE,MAAO,WACPC,OAAQ,SAAAC,GAAO,OACb,kBAAC,KAAD,CACEC,IAAK,EACLC,IAAK,GACL3D,MAAOyD,EAAQjC,SACfoC,SAAU,SAAAC,GAAa,OAAI/B,EAAe2B,EAAQnC,IAAKuC,SAK/DC,KAAMtB,EACNuB,WAAY,CACVC,WAAY,SAAAC,GAAU,IACZC,EAAuBD,EAAvBC,MACR,OAAIA,EAD2BD,EAAhBE,cACaD,EAAc,KACnC,kBAAC,oBAAqBD,KAGjCG,QAAS,CACP,CACEC,KAAM,kBAAM,kBAAC,KAAD,CAAgCtG,MAAM,eAClDuG,QAAS,cACTC,QAAS,SAACC,EAAOf,GACfhB,EAAWgB,EAAQnC,W,uuHCpDtB,IAAMmD,GAAiBC,KAAH,MAyBdC,IAhBeD,KAAH,MAQGA,KAAH,MAQDA,KAAH,OAmCRE,IArBWF,KAAH,MAqBGA,KAAH,OAmBRG,GAAaH,KAAH,MAQVI,GAAcJ,KAAH,MAMXK,GAAcL,KAAH,MAWXM,GAAmBN,KAAH,MAchBO,GAAkBP,KAAH,MAcfQ,GAAaR,KAAH,MAMVS,GAAeT,KAAH,MAcZU,GAAYV,KAAH,MAMTW,GAAeX,KAAH,MA2BZY,IAbcZ,KAAH,MAaEA,KAAH,OC3KjBa,GAAYC,YAAW,CAC3BC,KAAM,CACJC,OAAQ,WAINC,GAAuBC,aAAO,MAAPA,CAAc,CACzCF,OAAQ,WAqEKG,GAlEF,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACRC,EAAUR,KADY,EAEkB9F,IAAMuG,SAAS,GAFjC,mBAErBC,EAFqB,KAEJC,EAFI,OAGAzG,IAAM0G,WAAWhE,GAArC/C,EAHoB,EAGpBA,MAAOU,EAHa,EAGbA,SAWfL,IAAM2G,WAAU,kBAAMF,EATD,WACnB,IAAIG,EAA6B,EAKjC,OAJAjH,EAAM4C,KAAKd,KAAK3B,SAAS6B,KAAI,SAAAC,GAE3B,OADAgF,GAA8BhF,EAAQiF,MAAQjF,EAAQG,UAC/C,KAEF+E,KAAKC,MAAmC,IAA7BH,GAAoC,IAGfI,MAAiB,CAACrH,EAAM4C,KAAKd,KAAKb,QAd/C,MAgBHqG,YAAY1B,IAA9B2B,EAhBqB,oBAiBtBC,EAAgB,uCAAG,WAAMjF,GAAN,eAAAkF,EAAA,yDAClBzH,EAAM4C,KAAKC,MADO,gCACM0E,EAAe,CAAEG,UAAW,CAAEnF,eADpC,6BAGfT,EAAOQ,EAAsBC,GACnC7B,EAAS,CAAER,KAAM,cAAe4B,KAAM,CAAEgB,YAAahB,KAJhC,2CAAH,sDAjBM,EAyBHwF,YAAYzB,IAA9BnD,EAzBqB,oBA0BtBiF,EAAoB,uCAAG,WAAOpF,EAAWH,GAAlB,eAAAqF,EAAA,yDACtBzH,EAAM4C,KAAKC,MADW,gCAEnBH,EAAe,CACnBgF,UAAW,CAAEnF,YAAWH,cAHD,6BAMnBN,EAAO8F,EAAoBrF,EAAWH,GAC5C1B,EAAS,CAAER,KAAM,cAAe4B,KAAM,CAAEgB,YAAahB,KAP5B,2CAAH,wDAW1B,OACE,oCACE,kBAACyE,GAAD,KACE,kBAAC,GAAD,CACEnD,aAAcpD,EAAM4C,KAAKd,KAAK3B,SAC9BkD,WAAYmE,EACZ9E,eAAgBiF,IAElB,kBAACE,GAAA,EAAD,CAAMC,UAAWnB,EAAQN,MACvB,kBAAC0B,GAAA,EAAD,2BAAiClB,EAAjC,KACA,kBAACmB,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CACE9C,QAAS,WACPuB,EAAQrE,KAAK,eAFjB,6B,wCClEN8D,GAAYC,aAAW,SAAA8B,GAAK,MAAK,CACrCC,KAAM,CACJvE,QAAS,YACTjF,MAAOuJ,EAAMxI,QAAQ0I,KAAK,KAC1BC,SAAU,SACV,gBAAiB,MACjB,iBAAkB,MAClB,kBAAmB,MACnB,qBAAsB,MACtBC,WAAY,MACZ,gBAAiB,CACfC,YAAa,GAEf,UAAW,CACT5J,MAAOuJ,EAAMxI,QAAQC,QAAQC,WAsCpB4I,GAjCG,SAAC,GAAiB,IAAf9B,EAAc,EAAdA,QACbC,EAAUR,KAEhB,OACE,oCACGO,EACD,kBAAC+B,GAAA,EAAD,KACE,kBAAC,KAAD,CAAOC,MAAOrD,KACX,YAA+B,IAA5BsD,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,MAAOlE,EAAW,EAAXA,KAClB,OAAIiE,GAAWC,EACND,EAAU,aAAeC,EAE3BlE,EAAKmE,WAAW7G,KAAI,SAAA8G,GAAQ,OACjC,kBAACC,GAAA,EAAD,CACEjB,UAAWnB,EAAQwB,KACnBzJ,QAAQ,QACRsK,KAAI,oBAAeF,EAAS5G,KAC5B+G,IAAKH,EAAS5G,KAEb4G,EAAS7E,gB,8DC7BpBkC,GAAYC,YAAW,CAC3B+B,KAAM,CACJe,SAAU,SAEZC,iBAAkB,CAChBvF,QAAS,OAEXwF,MAAO,CACLC,MAAO,SAETC,QAAS,CACPC,cAAe,IACfC,WAAY,WAEdxE,QAAS,CACPyE,QAAS,OACTC,eAAgB,mBAuGLC,GAnGK,SAAC,GAAc,IAAZjF,EAAW,EAAXA,KAAW,EACJrE,IAAM0G,WAAWhE,GAArC/C,EADwB,EACxBA,MAAOU,EADiB,EACjBA,SADiB,EAEQL,IAAMuG,UAAS,GAFvB,mBAEzBgD,EAFyB,KAEXC,EAFW,OAGJxJ,IAAMuG,SAASO,KAAKC,MAAM1C,EAAKoF,OAASpF,EAAKqF,SAHzC,mBAGzBA,EAHyB,KAGjBC,EAHiB,OAIN3J,IAAMuG,UAAS,GAJT,mBAIzBqD,EAJyB,KAIlBC,EAJkB,KAO1BvD,GAFOwD,QAAQtJ,KAELsF,MAChB,OACE,kBAAC0B,GAAA,EAAD,CAAMC,UAAWnB,EAAQwB,MACtByB,GACC,kBAACQ,GAAA,EAAD,CACEC,UAAU,OACV3L,QAAQ,OACRoJ,UAAWnB,EAAQyC,MACnBkB,MAAO,CAAEC,OAAQ,WAGrB,yBACEC,OAAQ,kBAAMX,GAAgB,IAC9B5K,IAAKyF,EAAK+F,UACV3C,UAAWnB,EAAQyC,MACnBsB,IAAKhG,EAAKT,QAEZ,kBAAC8D,GAAA,EAAD,CAAaD,UAAWnB,EAAQ2C,SAC9B,kBAAC7K,EAAA,EAAD,CAAYkM,cAAY,EAACjM,QAAQ,KAAKkM,MAAM,UACzClG,EAAKT,OAER,kBAACxF,EAAA,EAAD,CAAYkM,cAAY,EAACjM,QAAQ,YAAYkM,MAAM,SAASjM,MAAM,WAC/D+F,EAAKwC,MADR,MAIF,kBAACc,GAAA,EAAD,CAAaF,UAAWnB,EAAQ3B,SAC9B,kBAAC,KAAD,CACE6F,SAAU3E,GACV4E,OAAQ,SAACC,EAAD,GAA+C,IAA7BC,EAA4B,EAApCtG,KAAQsG,oBACxB,OAAOhB,EAAU7C,KAAKC,MAAM4D,EAAoBlB,OAASkB,EAAoBjB,YAG9E,SAACiB,EAAD,OAAwBC,EAAxB,EAAwBA,OAAxB,OACC,kBAAC,KAAD,CACEtE,QAAS,CAAEuE,WAAYvE,EAAQwC,kBAC/BvI,MAAOmJ,EACPvF,SAAU,SAAA5D,GACHqK,GACHD,EAAoB,CAClBtD,UAAW,CAAEyD,GAAIzG,EAAKyG,GAAIpB,OAAQnJ,WAO9C,kBAAC,KAAD,CAAUiK,SAAUlF,GAAayF,eAAe,IAC7C,SAAAC,GAAS,OACR,kBAACpD,GAAA,EAAD,CACE1F,UAAWmC,EAAKyG,GAChBzM,QAAQ,WACRC,MAAM,UACNwG,QAAO,sBAAE,4BAAAsC,EAAA,yDACFzH,EAAM4C,KAAKC,MADT,gCAECwI,EAAU,CACd3D,UAAW,CAAEnF,UAAWmC,EAAKxC,OAH1B,6BAMCL,EAAeF,EAAiB+C,GACtChE,EAAS,CAAER,KAAM,sBAAuB+B,QAASJ,IAP5C,2CAUTyJ,aAAc,kBAAMpB,GAAS,IAC7BqB,YAAa,SAAAC,GAAC,OAAIA,EAAEC,mBACpBC,aAAc,kBAAMxB,GAAS,IAC7ByB,QAAS,kBAAMzB,GAAS,IACxB0B,OAAQ,kBAAM1B,GAAS,KAEtBD,GACC,kBAAC4B,GAAA,EAAD,CAAMC,GAAI7B,EAAO8B,QAAS,KACxB,kBAAC,KAAD,OAED,IAxBL,qBCpFN5F,GAAYC,YAAW,CAC3BgD,MAAO,CACLC,MAAO,QACPkB,OAAQ,SAEVjB,QAAS,CACPC,cAAe,KAEjBvE,QAAS,CACPyE,QAAS,OACTC,eAAgB,gBAChBa,OAAQ,QAEVyB,QAAS,CACPzB,OAAQ,UA+BG0B,GA3BU,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACpBvF,EAAUR,KAEhB,OACE,oCACGgG,MAAMD,GACJE,OACApK,KAAI,SAAC0C,EAAMyG,GAAP,OAEH,kBAACkB,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,EAAGtD,IAAKkC,GACrB,kBAACtD,GAAA,EAAD,KACE,kBAACuC,GAAA,EAAD,CAAUC,UAAU,OAAO3L,QAAQ,OAAOoJ,UAAWnB,EAAQyC,QAC7D,kBAACrB,GAAA,EAAD,CAAaD,UAAWnB,EAAQ2C,SAC9B,kBAACc,GAAA,EAAD,CAAUC,UAAU,OAAO3L,QAAQ,SACnC,kBAAC0L,GAAA,EAAD,CAAUC,UAAU,OAAO3L,QAAQ,UAErC,kBAACsJ,GAAA,EAAD,CAAaF,UAAWnB,EAAQ3B,SAC9B,kBAACoF,GAAA,EAAD,CAAUC,UAAU,OAAO3L,QAAQ,OAAOoJ,UAAWnB,EAAQqF,UAC7D,kBAAC5B,GAAA,EAAD,CAAUC,UAAU,OAAO3L,QAAQ,OAAOoJ,UAAWnB,EAAQqF,kB,oBCrCvE7F,GAAYC,YAAW,CAC3BoG,SAAU,CACRC,UAAW,UAkCAC,iBA9BA,SAAC,GAAuB,IAArBR,EAAoB,EAApBA,MAAOS,EAAa,EAAbA,OACjBhG,EAAUR,KAEhB,OACE,oCACE,kBAAC1H,EAAA,EAAD,CAAYgL,QAAQ,SAAS/K,QAAQ,UAArC,sBACsB,KAEtB,kBAACkO,GAAA,EAAD,CACE9E,UAAWnB,EAAQ6F,SACnB9N,QAAQ,WACRyM,GAAG,QACHvK,MAAOsL,EACP1H,SAAU,SAAAgH,GAAC,OAAImB,EAAOE,UAAU,CAAEnI,KAAM,CAAEwH,MAAOV,EAAEsB,OAAOlM,WAE1D,4BAAQA,MAAO,GAAf,KACA,4BAAQA,MAAO,IAAf,MACA,4BAAQA,MAAO,IAAf,W,iHCnBR,IAAMuF,GAAYC,aAAW,SAAA8B,GAAK,MAAK,CACrCC,KAAM,CACJ7B,OAAQ4B,EAAM6E,QAAQ,QAIpBC,GAAQxG,aAAO,OAAPA,CAAH,MA0CIyG,GArCE,WACf,IAAMtG,EAAUR,KADK,EAEO9F,IAAM0G,WAAW3G,GAArCJ,EAFa,EAEbA,MAAOU,EAFM,EAENA,SACPgE,EAASwI,YAASlH,IAAlBtB,KAHa,EAI0BwI,YAASjH,GAAc,CACpEyB,UAAW,CAAEwE,MAAOxH,EAAKwH,SADnBvD,EAJa,EAIbA,QAASC,EAJI,EAIJA,MAAaxF,EAJT,EAIGsB,KAQxB,OAJArE,IAAM2G,WAAU,WACT2B,GAASjI,EAAS,CAAER,KAAM,eAAgBC,SAAUiD,MACxD,CAACA,EAAcuF,EAASjI,IAEvBiI,EAEA,kBAAC0D,GAAA,EAAD,CAAMc,WAAS,EAACJ,QAAS,EAAGpG,QAAS,CAAEwG,UAAWxG,EAAQwB,OACxD,kBAAC,GAAD,CAAkB+D,MAAOxH,EAAKwH,SAGhCtD,EAAc,kBAACoE,GAAD,KAAQpE,GAGxB,kBAACyD,GAAA,EAAD,CAAMc,WAAS,EAACJ,QAAS,EAAGpG,QAAS,CAAEwG,UAAWxG,EAAQwB,OACxD,kBAACkE,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GACb,kBAAC,GAAD,OAEF,kBAACF,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,EAAGa,WAAW,YAC3B,kBAAC,GAAD,CAAQlB,MAAOmB,SAAS3I,EAAKwH,MAAO,OAErClM,EAAMG,SAAS6B,KAAI,SAAAC,GAAO,OACzB,kBAACoK,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,EAAGtD,IAAKhH,EAAQC,IAAIC,YACjC,kBAAC,GAAD,CAAa8G,IAAKhH,EAAQC,IAAIC,WAAYuC,KAAMzC,U,kKC3CpDkE,GAAYC,aAAW,SAAA8B,GAAK,MAAK,CACrCC,KAAM,CACJmF,eAAgB,OAChB1J,QAAS,YACTjF,MAAOuJ,EAAMxI,QAAQ0I,KAAK,KAC1B,gBAAiB,MACjB,iBAAkB,MAClB,kBAAmB,MACnB,qBAAsB,MACtBE,WAAY,MACZ,UAAW,CACT3J,MAAOuJ,EAAMxI,QAAQC,QAAQC,OAGjC2N,KAAM,CACJ,SAAU,CACR3J,QAAS,yBAqCA4J,GAhCE,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,SAAUC,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,QAASC,EAAgB,EAAhBA,UACrCjH,EAAUR,KAEhB,OACE,kBAAC,KAAD,CACEQ,QAAS,CAAE4G,KAAM5G,EAAQ4G,MACzBE,SAAUA,EACVI,aAAc,CAAEC,SAAU,MAAOC,WAAY,SAE7CC,aAAW,EACXC,gBAAiB,CAAEH,SAAU,MAAOC,WAAY,SAChDL,KAAMA,EACNC,QAASA,GAET,kBAACO,GAAA,EAAD,CAAUpG,UAAWnB,EAAQwB,MAC3B,kBAAC,IAAD,CAAMgG,GAAG,QAAQrG,UAAWnB,EAAQwB,MAApC,cAIF,kBAACiG,GAAA,EAAD,MACA,kBAACF,GAAA,EAAD,CAAUpG,UAAWnB,EAAQwB,MAC3B,kBAAC,KAAD,CAAUxJ,MAAM,UAAU0J,SAAS,UADrC,iBAIA,kBAAC6F,GAAA,EAAD,CAAUpG,UAAWnB,EAAQwB,KAAMhD,QAASyI,GAC1C,kBAAC,KAAD,CAAgCjP,MAAM,UAAU0J,SAAS,UAD3D,qB,qBChDAlC,GAAYC,aAAW,SAAA8B,GAAK,MAAK,CACrCC,KAAM,CACJmF,eAAgB,OAChB1J,QAAS,YACTjF,MAAOuJ,EAAMxI,QAAQ0I,KAAK,KAC1B,gBAAiB,MACjB,iBAAkB,MAClB,kBAAmB,MACnB,qBAAsB,MACtBE,WAAY,MACZ,UAAW,CACT3J,MAAOuJ,EAAMxI,QAAQC,QAAQC,OAGjC2N,KAAM,CACJ,SAAU,CACR3J,QAAS,yBA2BAyK,GAtBE,SAAC,GAAyC,IAAvCZ,EAAsC,EAAtCA,SAAUC,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,QAASW,EAAa,EAAbA,OACrC3H,EAAUR,KAEhB,OACE,kBAAC,KAAD,CACEQ,QAAS,CAAE4G,KAAM5G,EAAQ4G,MACzBE,SAAUA,EACVI,aAAc,CAAEC,SAAU,MAAOC,WAAY,SAE7CC,aAAW,EACXC,gBAAiB,CAAEH,SAAU,MAAOC,WAAY,SAChDL,KAAMA,EACNC,QAASA,GAET,kBAACO,GAAA,EAAD,CAAUpG,UAAWnB,EAAQwB,KAAMhD,QAASmJ,GAC1C,kBAAC,KAAD,CAAyB3P,MAAM,YAAY0J,SAAS,UADtD,iBCtBAlC,GAAYC,aAAW,SAAA8B,GAAK,MAAK,CACrCC,KAAM,CACJoG,SAAU,GAEZC,OAAQ,CACN5K,QAAS,MACT0C,OAAQ,OAEVmI,WAAY,CACVC,YAAaxG,EAAM6E,QAAQ,IAE7B9I,MAAO,CACLsK,SAAU,OAIRI,GAAcC,cAAW,SAAA1G,GAAK,MAAK,CACvC2G,MAAO,CACLC,OAAQ,EACRC,IAAK,GACLC,OAAO,aAAD,OAAe9G,EAAMxI,QAAQuP,WAAWC,OAC9CtL,QAAS,YALOgL,CAOhBO,MAkIWC,GAhIA,WAAO,IAAD,EACS/O,IAAM0G,WAAWhE,GAArC/C,EADW,EACXA,MAAOU,EADI,EACJA,SADI,EAEOwM,YAAS1H,IAA3BmD,EAFW,EAEXA,QAASjE,EAFE,EAEFA,KAFE,EAG0C2K,YAAgBtJ,IAA/DuJ,EAHK,EAGX5K,KAA4B6K,EAHjB,EAGQ5G,QAC3BtI,IAAM2G,WAAU,WACVnG,KACG0O,GAAwBD,EAC3B5O,EAAS,CACPR,KAAM,cACN4B,KAAMwN,KAEA3G,GAAWjE,GAAMhE,EAAS,CAAER,KAAM,WAAY0C,KAAM8B,EAAK7D,WAE9DK,KAAWK,GAAQ,GACxBb,EAAS,CAAER,KAAM,cACjBY,IAAQ0O,OAAO,eAEhB,CAAC9K,EAAMiE,EAAS2G,EAAaC,IAjBb,MAoBqBlP,IAAMuG,SAAS,MApBpC,mBAoBZ6I,EApBY,KAoBEC,EApBF,OAqBqBrP,IAAMuG,SAAS,MArBpC,mBAqBZ+I,EArBY,KAqBEC,EArBF,KAsBbjJ,EAAUR,KAtBG,EAwCCmB,YAAYxB,IAAzB8H,EAxCY,oBA0CbiC,EAAe,uCAAG,sBAAApI,EAAA,0DAClB5G,IADkB,gCACD+M,IADC,6BbbxBrM,GAAQ,GaiBJb,EAAS,CAAER,KAAM,eAJG,2CAAH,qDA1CF,EAkDEoH,YAAY5B,IAA1BoK,EAlDY,oBA4DnB,OACE,yBAAKhI,UAAWnB,EAAQwB,MACtB,kBAAC4H,GAAA,EAAD,CAAQC,SAAS,SACf,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAYC,KAAK,QAAQrI,UAAWnB,EAAQ8H,WAAY9P,MAAM,UAAUyR,aAAW,QACjF,kBAAC,KAAD,OAEF,kBAAC3R,EAAA,EAAD,CAAYC,QAAQ,KAAKoJ,UAAWnB,EAAQ1C,OAA5C,UAGA,6BACGjE,EAAM4C,KAAKC,OACV,oCACE,kBAACoF,GAAA,EAAD,CACEe,KAAK,UACLlB,UAAWnB,EAAQ6H,OACnB7P,MAAM,YACN0R,kBAAgB,GAJlB,SAQA,kBAACpI,GAAA,EAAD,CAAQH,UAAWnB,EAAQ6H,OAAQ9P,QAAQ,WAAWC,MAAM,aAA5D,aAKFqB,EAAM4C,KAAKC,OACX,oCACE,kBAACqN,GAAA,EAAD,CACEE,aAAW,0BACXE,gBAAc,OACdnL,QA3DW,SAAAqG,GACzBoE,EAAgBpE,EAAE+E,gBA2DJ5R,MAAM,WAEN,kBAAC,KAAD,CAAe0J,SAAS,QAAQ1J,MAAM,eAExC,kBAAC,GAAD,CACE8O,SAAUkC,EACVjC,KAAMvD,QAAQwF,GACdhC,QA/DY,SAAAnC,GAC1BoE,EAAgB,OA+DFtB,OAhDK,WACGwB,MAEpBhP,IAAQ0O,OAAO,YACf9O,EAAS,CAAER,KAAM,qBAgDX,kBAACgQ,GAAA,EAAD,CACEC,KAAK,MACLC,aAAW,gBAEXE,gBAAc,OACdnL,QArFe,SAAAqG,GACzBkE,EAAgBlE,EAAE+E,iBAsFR,kBAAC5B,GAAD,CAAa6B,aAAcxQ,EAAM4C,KAAKd,KAAKb,MAAOtC,MAAM,aACtD,kBAAC,KAAD,CAAc0J,SAAS,QAAQ1J,MAAM,gBAGzC,kBAAC,GAAD,CACE8O,SAAUgC,EACV/B,KAAMvD,QAAQsF,GACd9B,QA1FgB,SAAAnC,GAC1BkE,EAAgB,OA0FN9B,UAAWiC,S,qBC3JnB1J,GAAYC,aAAW,SAAA8B,GAAK,MAAK,CACrCsE,SAAU,CACRlG,OAAQ,QAEVmK,iBAAkB,CAChBT,SAAU,WACVU,gBAAiBxI,EAAMxI,QAAQuP,WAAW0B,QAC1ChS,MAAOuJ,EAAMxI,QAAQkR,KAAKjR,QAC1BkR,UAAW3I,EAAM6E,QAAQ,GACzB+D,aAAc5I,EAAM6E,QAAQ,GAC5BgE,eAAgB,QAChBC,iBAAkB,YAClBC,mBAAoB,UAEtBC,wBAAyB,CACvBlB,SAAU,WACVpM,QAASsE,EAAM6E,QAAQ,GACvB,CAAC7E,EAAMiJ,YAAYC,GAAG,OAAQ,CAC5BxN,QAASsE,EAAM6E,QAAQ,GACvBsE,aAAc,QAKdC,GAAW,WACf,OAAO,yBAAKrS,IAAKsS,KAAa7G,IAAI,SAASJ,MAAO,CAAEjB,MAAO,WAGvDmI,GAAS,SAAA3M,GACb,IAAM8B,EAAUR,KACRsL,EAAS5M,EAAT4M,KAER,OACE,kBAACpF,GAAA,EAAD,CAAMc,WAAS,EAACrF,UAAWnB,EAAQ8J,kBACjC,kBAACpE,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,EAAG5F,QAAS,CAAE2F,KAAM3F,EAAQ6F,WACzC,yBAAK1E,UAAWnB,EAAQuK,yBACtB,kBAACzS,EAAA,EAAD,CAAYiT,UAAU,KAAKhT,QAAQ,KAAKC,MAAM,UAAUgM,cAAY,GACjE8G,EAAKxN,OAER,kBAACxF,EAAA,EAAD,CAAYC,QAAQ,KAAKC,MAAM,UAAUgT,WAAS,GAC/CF,EAAKG,aAER,kBAAC7I,GAAA,EAAD,CAAMrK,QAAQ,YAAYsK,KAAK,KAC5ByI,EAAKI,YAIZ,kBAACxF,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GACb,kBAAC,GAAD,SAURiF,GAAOM,aAAe,CACpBL,KAAM,CACJM,UAAWT,GACXrN,MAAO,WACP2N,YAAa,oBACbC,SAAU,KAICL,U,wCCrETrL,GAAYC,aAAW,SAAA8B,GAAK,MAAK,CACrCC,KAAM,CACJkB,MAAO,OACP,YAAa,CACXwH,UAAW3I,EAAM6E,QAAQ,SAyBhBiF,GApBS,SAAC,GAAiC,IAA/BtE,EAA8B,EAA9BA,KAAMuE,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,QACnCvL,EAAUR,KAEhB,OACE,yBAAK2B,UAAWnB,EAAQwB,MACtB,kBAACgK,GAAA,EAAD,CAAUzE,KAAMA,EAAM0E,iBAAkB,KACtC,kBAAC,KAAD,CAAU5T,UAAW,EAAGE,QAAQ,SAASuT,SAAUA,GAChDC,MCXL/L,GAAYC,YAAW,CAC3BiM,KAAM,CACJ5I,QAAS,OACTC,eAAgB,gBAChB4I,cAAe,SACfjJ,MAAO,MACP/C,OAAQ,YAEViM,MAAO,CACLzB,aAAc,SAgFH0B,GA5ED,SAAC,GAAiB,IAAf9L,EAAc,EAAdA,QACTC,EAAUR,KADa,EAEEmB,YAAY7B,IAFd,mBAEtBgN,EAFsB,aAET7J,MACMvI,IAAMuG,SAAS,KAHZ,mBAGtB8L,EAHsB,KAGfC,EAHe,OAIGtS,IAAMuG,SAAS,IAJlB,mBAItBgM,EAJsB,KAIZC,EAJY,OAKLxS,IAAMuG,UAAS,GALV,mBAKtB8G,EALsB,KAKhBoF,EALgB,OAMCzS,IAAMuG,SAAS,IANhB,mBAMtBsL,EANsB,KAMba,EANa,OAOG1S,IAAMuG,SAAS,IAPlB,mBAOtBqL,EAPsB,KAOZe,EAPY,OAQcC,eAAnCC,EARqB,EAQrBA,SAAUC,EARW,EAQXA,aAAcC,EARH,EAQGA,OAC1BC,EAAQ,uCAAG,8BAAA5L,EAAA,sEACQgL,EAAU,CAC/B/K,UAAW,CAAEgL,QAAOE,YACpBU,YAAa,MACbC,eAAgB,CAAC,CAAE7K,MAAOnD,IAAY,CAAEmD,MAAOlD,OAJlC,qBACPd,EADO,EACPA,MAKC+N,UANM,qBAOT/N,EAAK+N,UAAUe,QAPN,uBhB1BjB1S,IAAQ2S,IAAI,YAAY,EAAM,CAAEC,QAAS,IgB0BxB,kBASJhN,EAAQiN,UATJ,+BAYbZ,EAAW,6EACXC,EAAY,SACZF,GAAQ,GAdK,4CAAH,qDAkBd,OACE,0BAAMO,SAAUF,EAAaE,GAAWvL,UAAWnB,EAAQ0L,MACzD,kBAACuB,GAAA,EAAD,CACEC,KAAK,QACL1I,GAAG,QACHzM,QAAQ,WACR8F,SAAU,SAAAgH,GAAC,OAAImH,EAASnH,EAAEsB,OAAOlM,QACjCkT,YAAY,aACZhM,UAAWnB,EAAQ4L,MACnBwB,WAAY,CACVC,IAAKd,EAAS,CACZe,SAAU,gCACVC,QAAS,CACPtT,MAAO,kCACPsR,QAAS,kDAIftJ,MAAOwK,EAAOV,MACdyB,WAAYf,EAAOV,OAASU,EAAOV,MAAMR,UAE3C,kBAAC0B,GAAA,EAAD,CACEC,KAAK,WACL1I,GAAG,WACHzM,QAAQ,WACR8F,SAAU,SAAAgH,GAAC,OAAIqH,EAAYrH,EAAEsB,OAAOlM,QACpCV,KAAK,WACL4T,YAAY,gBACZhM,UAAWnB,EAAQ4L,MACnBwB,WAAY,CACVC,IAAKd,EAAS,CACZe,SAAU,mCAGdrL,MAAOwK,EAAOR,SACduB,WAAYf,EAAOR,UAAYQ,EAAOR,SAASV,UAEjD,kBAACjK,GAAA,EAAD,CAAQvJ,QAAQ,YAAYC,MAAM,UAAUuB,KAAK,UAAjD,SAGA,kBAACkU,GAAD,CAAiBlC,QAASA,EAASD,SAAUA,EAAUvE,KAAMA,M,mIC7CpDT,GAtCE,SAAC,GAAmC,IAAjC9M,EAAgC,EAAhCA,SAAU0G,EAAsB,EAAtBA,gBAC5B,OACE,kBAACwN,GAAA,EAAD,CAAOjE,aAAW,kBAChB,kBAACkE,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,kBAAC9V,EAAA,EAAD,CAAYC,QAAQ,MAApB,iBAEF,kBAAC6V,GAAA,EAAD,CAAW3J,MAAM,SACf,kBAACnM,EAAA,EAAD,CAAYC,QAAQ,MAApB,aAEF,kBAAC6V,GAAA,EAAD,CAAW3J,MAAM,SACf,kBAACnM,EAAA,EAAD,CAAYC,QAAQ,MAApB,iBAGJ,kBAAC8V,GAAA,EAAD,KACGrU,EAAS6B,KAAI,SAAAC,GAAO,OACnB,kBAACwS,GAAA,EAAD,CAAUxL,IAAKhH,EAAQC,KACrB,kBAACqS,GAAA,EAAD,KAAYtS,EAAQgC,OACpB,kBAACsQ,GAAA,EAAD,CAAW3J,MAAM,SAAS3I,EAAQG,UAClC,kBAACmS,GAAA,EAAD,CAAW3J,MAAM,SACdzD,KAAKC,MAAMnF,EAAQiF,MAAQjF,EAAQG,SAAW,KAAO,IADxD,SAKJ,kBAACqS,GAAA,EAAD,KACE,kBAACF,GAAA,EAAD,CAAWG,QAAS,IACpB,kBAACH,GAAA,EAAD,CAAW3J,MAAM,SACf,kBAACnM,EAAA,EAAD,CAAYC,QAAQ,MAApB,sBAEF,kBAAC6V,GAAA,EAAD,CAAW3J,MAAM,SACf,kBAACnM,EAAA,EAAD,CAAYC,QAAQ,MAAMmI,EAA1B,U,iDC1BNV,GAAYC,aAAW,SAAA8B,GAAK,MAAK,CACrCsG,OAAQ,CACNqC,UAAW3I,EAAM6E,QAAQ,GACzB2B,YAAaxG,EAAM6E,QAAQ,QA0GhB4H,GAtGM,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,WAAYC,EAAiB,EAAjBA,WAAiB,EACjBxU,IAAMuG,SAAS,IADE,mBAC5CkO,EAD4C,KACjCC,EADiC,OAEnB1U,IAAMuG,SAAS,IAFI,mBAE5CoO,EAF4C,KAElCC,EAFkC,OAGzB5U,IAAMuG,SAAS,IAHU,mBAG5C8L,EAH4C,KAGrCC,EAHqC,OAIXtS,IAAMuG,WAJK,mBAI5CsO,EAJ4C,KAI9BC,EAJ8B,OAKRlC,eAAnCC,EAL2C,EAK3CA,SAAUC,EALiC,EAKjCA,aAAcC,EALmB,EAKnBA,OAE1BzM,EAAUR,KAMhB,OACE,0BAAMkN,SAAUF,GAHD,kBAAM0B,QAInB,kBAACxI,GAAA,EAAD,CAAMc,WAAS,EAACJ,QAAS,EAAGzC,MAAO,CAAE8K,KAAM,UACzC,kBAAC/I,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GACb,kBAAC8I,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,mBACA,kBAAC1B,GAAA,EAAD,CACEC,KAAK,YACLnV,QAAQ,WACRkC,MAAOkU,EACPtQ,SAAU,SAAAgH,GAAC,OAAIuJ,EAAavJ,EAAEsB,OAAOlM,QACrCmT,WAAY,CACVC,IAAKd,EAAS,CACZe,SAAU,mCAGdrL,MAAOwK,EAAO0B,UACdX,WAAYf,EAAO0B,WAAa1B,EAAO0B,UAAU5C,YAIvD,kBAAC7F,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GACb,kBAAC8I,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,kBACA,kBAAC1B,GAAA,EAAD,CACEC,KAAK,WACLnV,QAAQ,WACRkC,MAAOoU,EACPxQ,SAAU,SAAAgH,GAAC,OAAIyJ,EAAYzJ,EAAEsB,OAAOlM,QACpCmT,WAAY,CACVC,IAAKd,EAAS,CACZe,SAAU,mCAGdrL,MAAOwK,EAAO4B,SACdb,WAAYf,EAAO4B,UAAY5B,EAAO4B,SAAS9C,YAIrD,kBAAC7F,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GACb,kBAAC8I,GAAA,EAAD,KACE,kBAAC,KAAD,CAAyBE,MAAOC,MAC9B,kBAAC,KAAD,CACElP,OAAO,SACP6E,GAAG,qBACHsK,MAAM,aACNC,OAAO,aACP9U,MAAOsU,EACP1Q,SApDW,SAAAmR,GAAI,OAAIR,EAAgBQ,IAqDnCC,oBAAqB,CACnB,aAAc,oBAMxB,kBAACvJ,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GACb,kBAAC8I,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,sBACA,kBAAC1B,GAAA,EAAD,CACEC,KAAK,QACLnV,QAAQ,WACRkC,MAAO8R,EACPlO,SAAU,SAAAgH,GAAC,OAAImH,EAASnH,EAAEsB,OAAOlM,QACjCmT,WAAY,CACVC,IAAKd,EAAS,CACZe,SAAU,gCACVC,QAAS,CACPtT,MAAO,kCACPsR,QAAS,kDAIftJ,MAAOwK,EAAOV,MACdyB,WAAYf,EAAOV,OAASU,EAAOV,MAAMR,YAI/C,kBAACjK,GAAA,EAAD,CAAQ9C,QAAS,kBAAMyP,KAAc9M,UAAWnB,EAAQ6H,QAAxD,QAGA,kBAACvG,GAAA,EAAD,CAAQ/H,KAAK,SAASxB,QAAQ,YAAYC,MAAM,WAAhD,0B,+BCwCOkX,GA9IQ,SAAC,GAA4C,IAA1ChB,EAAyC,EAAzCA,WAAYD,EAA6B,EAA7BA,WAAYkB,EAAiB,EAAjBA,WAAiB,EACjCzV,IAAMuG,SAAS,IADkB,mBAC1DmP,EAD0D,KAChDC,EADgD,OAEvB3V,IAAMuG,SAAS,IAFQ,mBAE1DqP,EAF0D,KAE3CC,EAF2C,OAGjC7V,IAAMuG,SAAS,IAHkB,mBAG1DuP,EAH0D,KAGhDC,EAHgD,OAIjC/V,IAAMuG,SAAS,IAJkB,mBAI1DyP,EAJ0D,KAIhDC,EAJgD,OAKnCjW,IAAMuG,SAAS,IALoB,mBAK1D2P,EAL0D,KAKjDC,EALiD,OAMzCnW,IAAMuG,SAAS,IAN0B,mBAM1D6P,EAN0D,KAMpDC,EANoD,OAOnCrW,IAAMuG,SAAS,IAPoB,mBAO1D+P,EAP0D,KAOjDC,EAPiD,OAQtB3D,eAAnCC,EARyD,EAQzDA,SAAUC,EAR+C,EAQ/CA,aAAcC,EARiC,EAQjCA,OAehC,OACE,0BAAMC,SAAUF,GAdD,WACf2C,EAAW,CACTC,WACAE,gBACAE,WACAE,WACAE,UACAE,OACAE,YAEF9B,QAKE,kBAACxI,GAAA,EAAD,CAAMc,WAAS,EAACJ,QAAS,GACvB,kBAACV,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IACb,kBAAC8I,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,kBACA,kBAAC1B,GAAA,EAAD,CACEC,KAAK,WACLjT,MAAOmV,EACP5B,WAAW,WACX3P,SAAU,SAAAgH,GAAC,OAAIwK,EAAYxK,EAAEsB,OAAOlM,YAI1C,kBAACyL,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IACb,kBAAC8I,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,uBACA,kBAAC1B,GAAA,EAAD,CACEC,KAAK,gBACLjT,MAAOqV,EACPzR,SAAU,SAAAgH,GAAC,OAAI0K,EAAiB1K,EAAEsB,OAAOlM,QACzCmT,WAAY,CACVC,IAAKd,EAAS,CACZe,SAAU,mCAGdrL,MAAOwK,EAAOyD,cACd1C,WAAYf,EAAOyD,eAAiBzD,EAAOyD,cAAc3E,YAI/D,kBAAC7F,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IACb,kBAAC8I,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,kBACA,kBAAC1B,GAAA,EAAD,CACEC,KAAK,WACLjT,MAAOuV,EACP3R,SAAU,SAAAgH,GAAC,OAAI4K,EAAY5K,EAAEsB,OAAOlM,QACpCmT,WAAY,CACVC,IAAKd,EAAS,CACZe,SAAU,mCAGdrL,MAAOwK,EAAO+C,SACdhC,WAAYf,EAAO+C,UAAY/C,EAAO+C,SAASjE,YAIrD,kBAAC7F,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IACb,kBAAC8I,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,kBACA,kBAAC1B,GAAA,EAAD,CACEC,KAAK,WACLjT,MAAOyV,EACPlC,WAAW,WACX3P,SAAU,SAAAgH,GAAC,OAAI8K,EAAY9K,EAAEsB,OAAOlM,YAI1C,kBAACyL,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IACb,kBAAC8I,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,gBACA,kBAAC1I,GAAA,EAAD,CAAQiH,KAAK,UAAUrP,SAAU,SAAAgH,GAAC,OAAIgL,EAAWhL,EAAEsB,OAAOlM,QAAQA,MAAO2V,GACtEO,GAAqB9U,KAAI,SAAAuU,GAAO,OAC/B,4BAAQtN,IAAKsN,EAAQQ,aAAcnW,MAAO2V,EAAQQ,cAC/CR,EAAQA,eAMnB,kBAAClK,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GACb,kBAAC8I,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,aACA,kBAAC1B,GAAA,EAAD,CACEC,KAAK,OACLjT,MAAO6V,EACPjS,SAAU,SAAAgH,GAAC,OAAIkL,EAAQlL,EAAEsB,OAAOlM,QAChCmT,WAAY,CACVC,IAAKd,EAAS,CACZe,SAAU,mCAGdrL,MAAOwK,EAAOqD,KACdtC,WAAYf,EAAOqD,MAAQrD,EAAOqD,KAAKvE,YAI7C,kBAAC7F,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GACb,kBAAC8I,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,iBACA,kBAAC1B,GAAA,EAAD,CACEoD,UAAWT,EACX1C,KAAK,UACLjT,MAAO+V,EACPnS,SAAU,SAAAgH,GAAC,OAAIoL,EAAWpL,EAAEsB,OAAOlM,QACnCuT,WAEEoC,EAAUnD,EAAOuD,SAAWvD,EAAOuD,QAAQzE,QAAU,8BAEvDtJ,MAAOwK,EAAOuD,QACd5C,WAAY,CACVC,IAAKd,EAAS,CACZ+D,SAAU,SAAArW,GAAK,OAC4B,IAAzCsW,KAAYD,SAASV,EAAS3V,IAAmB,gCAO/D,kBAACqH,GAAA,EAAD,CAAQ9C,QAAS,kBAAMyP,MAAvB,QACA,kBAAC3M,GAAA,EAAD,CAAQ/H,KAAK,SAASxB,QAAQ,YAAYC,MAAM,WAAhD,yBC7IAwY,I,OAAuB,CAC3B7M,MAAO,CACL8M,KAAM,CACJzY,MAAO,UACPE,WAAY,0CACZwY,cAAe,cACfhP,SAAU,OACV,gBAAiB,CACf1J,MAAO,YAGX2Y,QAAS,CACP3Y,MAAO,UACP4Y,UAAW,cA4FFC,GAvFM,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,aACzBC,EAASC,uBACTC,EAAWC,yBAEXC,EAAoB,uCAAG,WAAMC,GAAN,qBAAAvQ,EAAA,0DACvBuQ,EAASpP,MADc,2CAGhBoP,EAASC,gBAHO,iCAK2BN,EAAOO,iBACzDF,EAASG,8BANc,mBAKVC,EALU,EAKjBxP,MAAoByP,EALH,EAKGA,eAIxBD,EATqB,0DAcME,MAAM,gCAAiC,CAClEC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMtX,KAAKO,UAAU,CACnBgX,kBAAmBL,EAAclN,GACjCwN,cAA8B,IAAfjB,MAnBI,eAcjBkB,EAdiB,YAsBvBb,EAtBuB,UAsBIa,EAAeC,OAtBnB,mEAyBzBC,QAAQC,IAAI,WAzBa,4CAAH,sDA6BpBC,EAA0B,uCAAG,WAAMC,GAAN,iBAAAxR,EAAA,0DAC7BwR,EAAOrQ,MADsB,gBAG/BkQ,QAAQC,IAAIE,EAAOrQ,OAHY,uCAMb0P,MAAM,gCAAiC,CACvDC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMtX,KAAKO,UAAU,CACnBwX,kBAAmBD,EAAOE,cAAchO,GACxCwN,cAA8B,IAAfjB,MAXY,cAMzB0B,EANyB,gBAcDA,EAAIP,OAdH,OAczBQ,EAdyB,OAgB/BtB,EAAqBsB,GAhBU,4CAAH,sDAoB1BC,EAAa,uCAAG,WAAMlU,GAAN,eAAAqC,EAAA,6DACpBrC,EAAMmU,iBADc,SAGC5B,EAAO6B,oBAAoB,CAC9CtZ,KAAM,OACNmG,KAAMwR,EAAS4B,WAAWC,gBAC1BC,gBAAiB,CAEflC,QAAS,CACPhB,KAAMgB,EAAQhB,KACdF,QAASkB,EAAQlB,QACjBqD,MAAOnC,EAAQtB,SACf0D,MAAOpC,EAAQpB,SACfyD,YAAarC,EAAQd,QACrB3W,MAAO,MAET0S,MAAO,KACPmB,KAAM4D,EAAQxB,iBAjBE,OAGdgD,EAHc,OAoBpBD,EAA2BC,GApBP,2CAAH,sDAuBnB,OACE,0BAAM5F,SAAUiG,GAAhB,eAEE,kBAAC,eAAD,CAAahW,QAAS6T,KACtB,kBAAClP,GAAA,EAAD,CAAQ/H,KAAK,SAAS8W,UAAWW,GAAjC,oBCpFAxR,GAAYC,aAAW,SAAA8B,GAAK,MAAK,CACrCC,KAAM,CACJkB,MAAO,QAETmF,OAAQ,CACNqC,UAAW3I,EAAM6E,QAAQ,GACzB2B,YAAaxG,EAAM6E,QAAQ,IAE7BgN,iBAAkB,CAChBjJ,aAAc5I,EAAM6E,QAAQ,IAE9BiN,eAAgB,CACdpW,QAASsE,EAAM6E,QAAQ,QAkNZkN,GA9ME,SAAC,GAAyC,IAAvCvT,EAAsC,EAAtCA,QAASwT,EAA6B,EAA7BA,MAAOrT,EAAsB,EAAtBA,gBAAsB,EACJxG,IAAMuG,WADF,mBACjDuT,EADiD,KAC7BC,EAD6B,KAElDC,EAAQ,CACZ,mBACA,mBACA,WACA,qBACA,WAGIC,EAAwB,WAC5B,IAAMC,EAASC,EAAQ,KACvBlC,MAAMiC,GACHE,MAAK,SAAArB,GAAG,OAAIA,EAAIxI,UAChB6J,MAAK,SAAA7J,GAAI,OAAIwJ,EAAsBM,KAAO9J,OAC1C+J,MAAM7B,QAAQC,MAfqC,EAkBtB1Y,IAAMuG,UAAS,GAlBO,mBAkBjDgU,EAlBiD,KAkBtCC,EAlBsC,KAoBlDlU,EAAUR,KApBwC,EAsBpB9F,IAAMuG,SAAS,GAtBK,mBAsBjDkU,EAtBiD,KAsBrCC,EAtBqC,OAwB1B1a,IAAMuG,SAAS,IAxBW,mBAwBjD6Q,EAxBiD,KAwBxCuD,EAxBwC,KA0BxD3a,IAAM2G,WAAU,kBAAMsT,IAAuB,CAACQ,IAE9C,IAAMjG,EAAa,WACjBkG,GAAc,SAAAE,GAAc,OAAIA,EAAiB,MAG7CrG,EAAa,WACjBmG,GAAc,SAAAE,GAAc,OAAIA,EAAiB,MAjCK,EAkDpB5a,IAAMuG,UAAS,GAlDK,mBAkDjDsU,EAlDiD,KAkDrCC,EAlDqC,KAoDxD9a,IAAM2G,WAAU,WACdmU,EAAcP,KACb,CAACA,IAEJva,IAAM2G,WAAU,WACK,IAAf8T,GAAkBK,GAAc,KACnC,CAACL,IAEJ,IAAMM,EAAgBC,aAAW,8CAM3BC,EAAa,SAAAC,GACjB,OAAQA,GACN,KAAK,EACL,KAAK,EACH,MAAO,CACLC,UAAW,OACXC,aAAc,kBAAM7G,KACpB8G,WAAY,OACZC,cAAe,kBAAM9G,MAEzB,KAAK,EACH,MAAO,CACL2G,UAAW3a,IAAY,OAAS,sBAChC4a,aAAc,kBAAO5a,IAAY+T,IAvCfiG,GAAa,IAwC/Ba,WAAY7a,IAAY,OAAS,QACjC8a,cAAe,kBAAO9a,IAAYgU,SAtCxCnO,EAAQrE,KAAK,YAwCX,KAAK,EACH,MAAO,CACLmZ,UAAW,OACXC,aAAc,kBAAM7G,KACpB8G,WAAY,UACZC,cAAe,kBAAM9G,MAEzB,KAAK,EACH,MAAO,CACL2G,UAAW,OACXC,aAAc,kBAAM7G,KACpB8G,WAAY,oBACZC,cAAe,iBAjDM,YAmDzB,QACE,MAAO,iCAIPC,EAAe,SAAAL,GACnB,OAAQA,GACN,KAAK,EACH,OAAO,kBAAC,GAAD,CAAUpb,SAAU+Z,EAAOrT,gBAAiBA,IACrD,KAAK,EACH,OAAQhG,IAoBJ,KAnBF,oCACG+Z,EACC,kBAAC,GAAD,CACEhG,WAAY,WACViG,GAAa,GACbjG,KAEFC,WAAY,kBAAMA,OAGpB,kBAACpW,EAAA,EAAD,CAAYC,QAAQ,QAAQC,MAAM,WAAlC,kDAEE,6BAFF,oFAIE,6BACA,+BAKV,KAAK,EACH,OACE,kBAAC,GAAD,CACEiW,WAAY,WACVuG,GAAc,GACdvG,KAEFC,WAAY,WACVsG,GAAc,GACdtG,KAEFiB,WAAY,SAAA+F,GAAe,OA7EZ,SAAAA,GACvBb,EAAWa,GA4E4BC,CAAiBD,MAGtD,KAAK,EAEH,OACE,yBACEE,wBAAyB,CAAEC,OAAQ7B,GACnC7P,MAAO,CAAEjB,MAAO,OAAQoD,UAAW,QAASwP,UAAW,YAG7D,KAAK,EACH,OAAO,kBAAC,GAAD,CAAcxE,QAASA,EAASC,aAAc7Q,IACvD,QACE,MAAO,iBAIb,OACE,kBAAC,YAAD,CAAU8Q,OAAQyD,GAChB,kBAACc,GAAA,EAAD,CAASpB,WAAYA,EAAYqB,YAAY,YAC1C9B,EAAMrY,KAAI,SAACyT,EAAO2G,GAAR,OACT,kBAACC,GAAA,EAAD,CAAMpT,IAAKwM,GACT,kBAAC6G,GAAA,EAAD,KAAY7G,GACZ,kBAAC8G,GAAA,EAAD,KACE,kBAAC9d,EAAA,EAAD,KAAamd,EAAaQ,IAC1B,yBAAKtU,UAAWnB,EAAQoT,kBACtB,6BACGmB,EAAa,KACZ,oCACE,kBAACjT,GAAA,EAAD,CACE+O,SAAyB,IAAf8D,EACV3V,QAASmW,EAAWR,GAAYW,aAChC3T,UAAWnB,EAAQ6H,QAElB8M,EAAWR,GAAYU,WAE1B,kBAACvT,GAAA,EAAD,CACEvJ,QAAQ,YACRC,MAAM,UACNwG,QAASmW,EAAWR,GAAYa,cAChC7T,UAAWnB,EAAQ6H,QAElB8M,EAAWR,GAAYY,qBAUzCZ,IAAeT,EAAMmC,QACpB,kBAACje,EAAA,EAAD,CAAOke,QAAM,EAACje,UAAW,EAAGsJ,UAAWnB,EAAQqT,gBAC7C,kBAACvb,EAAA,EAAD,8CACA,kBAACwJ,GAAA,EAAD,CAAQ9C,QA/JI,WAClB4V,EAAc,IA8JsBjT,UAAWnB,EAAQ6H,QAAjD,YC9MJzD,GAAQ,IAAI2R,IAEZC,GAAW,IAAIC,IAAS,CAC5BC,IAAK,gCACLC,YAAa,YAGTC,GAAS,IAAIC,IAAc,CAC/BH,IAAI,8BACJvZ,QAAS,CACP2Z,WAAW,KAITC,GAAYC,aAAQ,YAAsC,IAAnCC,EAAkC,EAAlCA,cAAeC,EAAmB,EAAnBA,aAQ1C,GAPID,GACFA,EAAcpb,KAAI,YAA+C,IAA5CkQ,EAA2C,EAA3CA,QAASoL,EAAkC,EAAlCA,UAAWC,EAAuB,EAAvBA,KACf,oBADsC,EAAjBC,WAC9BC,MACb3c,IAAQ0O,OAAO,YAEjBsJ,QAAQC,IAAR,oCAAyC7G,EAAzC,uBAA+DoL,EAA/D,mBAAmFC,OAEnFF,EACF,OAAO,kBAAC,EAAD,CAAOhf,UAAWgf,EAAaI,KAAMnf,aAAc+e,EAAanL,aAGrEwL,GAAYC,aAChB,YAAgB,IAAbjV,EAAY,EAAZA,MACKkV,EAAaC,YAAkBnV,GACrC,MAA2B,wBAApBkV,EAAWE,MAA2D,iBAAzBF,EAAWG,YAEjEhB,GACAJ,IAGIhQ,GAAS,IAAIqR,IAAa,CAC9BC,KAAMf,GAAUgB,OAAOR,IACvB3S,SACAoT,UAAW,GACXC,SAAS,0DAKTC,mBAAmB,IAGrBtT,GAAM8B,UAAU,CACdnI,KAAM,CACJwH,MAAO,MAIX,IAoEeoS,GApEH,WACV,IAAMC,EAAWC,cADD,EAEkBne,IAAMuG,WAFxB,mBAET6X,EAFS,KAEEC,EAFF,OAGgCre,IAAMuG,WAHtC,mBAGT+X,EAHS,KAGSC,EAHT,OAI8Bve,IAAMuG,WAJpC,mBAITC,EAJS,KAIQC,EAJR,KAMV+X,EAAwB,SAAA5d,GAC5Byd,EAAazd,IAOT6d,EAA4B,SAAA5E,GAChC0E,EAAoB1E,IAGhB6E,EAA2B,SAAA9d,GAC/B6F,EAAmB7F,IAGrB,OACE,kBAAC,IAAD,CAAgB0L,OAAQA,IACtB,kBAAC,EAAD,KACE,kBAAC,EAAD,KACE,kBAACqS,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,CAAe/W,MAAOgX,GACpB,kBAAC,GAAD,CACEC,qBAnBY,kBAAMN,EAAsB,IAoBxCO,kBAlBoB,kBAAMP,EAAsB3d,IAAUD,QAmB1Dwd,UAAWA,IAEU,MAAtBF,EAASc,SAAmB,kBAAC,GAAD,MAAa,KAC1C,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEC,OAAK,EACL/B,KAAK,IACLnZ,OAAQ,SAAAS,GAAK,OAAI,kBAAC,GAAD,eAAU0a,YAAaV,GAA2Bha,OAErE,kBAAC,IAAD,CAAO0Y,KAAK,gBAAgB7L,UAAWzE,KACvC,kBAAC,IAAD,CACEsQ,KAAK,QACLnZ,OAAQ,SAAAS,GAAK,OACX,kBAAC,GAAD,eACE2a,gBAAiBX,EACjBF,iBAAkBG,EAClBjY,gBAAiBkY,GACbla,OAIV,kBAAC,IAAD,CACE0Y,KAAK,YAELnZ,OAAQ,SAAAS,GAAK,OACX,kBAAC,GAAD,eAAUqV,MAAOyE,EAAkB9X,gBAAiBA,GAAqBhC,OAG7E,kBAAC,IAAD,CAAO0Y,KAAK,UAAU7L,UAAWc,WC5HzCiN,GAActV,QACW,cAA7BuV,OAAOnB,SAASoB,UAEe,UAA7BD,OAAOnB,SAASoB,UAEhBD,OAAOnB,SAASoB,SAASC,MACvB,2DAsCN,SAASC,GAAgBC,EAAOC,GAC9BC,UAAUC,cACP/M,SAAS4M,GACTrF,MAAK,SAAAyF,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBpgB,QACfggB,UAAUC,cAAcM,YAI1BzH,QAAQC,IACN,iHAKEgH,GAAUA,EAAOS,UACnBT,EAAOS,SAASN,KAMlBpH,QAAQC,IAAI,sCAGRgH,GAAUA,EAAOU,WACnBV,EAAOU,UAAUP,WAO5BvF,OAAM,SAAA/R,GACLkQ,QAAQlQ,MAAM,4CAA6CA,MC1FjE8X,IAAStc,OACP,kBAAC,IAAD,KACE,kBAAC,GAAD,OAEFuc,SAASC,eAAe,SDYnB,SAAkBb,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAIa,IAAIC,GAAwBpB,OAAOnB,SAASvV,MACpD+X,SAAWrB,OAAOnB,SAASwC,OAIvC,OAGFrB,OAAOsB,iBAAiB,QAAQ,WAC9B,IAAMlB,EAAK,UAAMgB,GAAN,sBAEPrB,KAgEV,SAAiCK,EAAOC,GAEtCzH,MAAMwH,GACHrF,MAAK,SAAAzC,GAEJ,IAAMiJ,EAAcjJ,EAASQ,QAAQzX,IAAI,gBAEnB,MAApBiX,EAASkJ,QACO,MAAfD,IAA8D,IAAvCA,EAAYE,QAAQ,cAG5CnB,UAAUC,cAAcmB,MAAM3G,MAAK,SAAAyF,GACjCA,EAAamB,aAAa5G,MAAK,WAC7BiF,OAAOnB,SAAS+C,eAKpBzB,GAAgBC,EAAOC,MAG1BpF,OAAM,WACL7B,QAAQC,IACN,oEArFAwI,CAAwBzB,EAAOC,GAI/BC,UAAUC,cAAcmB,MAAM3G,MAAK,WACjC3B,QAAQC,IACN,iHAMJ8G,GAAgBC,EAAOC,OClC/BE,K","file":"static/js/main.cecef25b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/NotoSans-Regular.5a87cce8.ttf\";","module.exports = __webpack_public_path__ + \"static/media/NotoSans-Bold.98f0cacc.ttf\";","module.exports = __webpack_public_path__ + \"static/media/header-bg.08aaf026.png\";","module.exports = __webpack_public_path__ + \"static/media/temsandconditions.4f16f917.md\";","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst Error = ({ errorCode, errorMessage }) => {\r\n  return (\r\n    <Paper elevation={3}>\r\n      <Typography variant=\"caption\" color=\"primary\">\r\n        {errorCode}\r\n      </Typography>\r\n      <Typography variant=\"body1\">{errorMessage}</Typography>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nError.propTypes = {\r\n  errorCode: PropTypes.string.isRequired,\r\n  errorMessage: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Error;\r\n","import { createMuiTheme } from '@material-ui/core/styles';\r\nimport NotoSansRegular from './NotoSans-Regular.ttf';\r\nimport NotoSansBold from './NotoSans-Bold.ttf';\r\n\r\nconst notoSansRegular = {\r\n  fontFamily: 'Noto Sans',\r\n  fontStyle: 'normal',\r\n  fontDisplay: 'swap',\r\n  fontWeight: 100,\r\n  src: `\r\n    local('Noto Sans'),\r\n    local('NotoSans-Regular'),\r\n    url(${NotoSansRegular}) format('ttf')\r\n  `,\r\n};\r\n\r\nconst notoSansBold = {\r\n  fontFamily: 'Noto Sans Bold',\r\n  fontStyle: 'normal',\r\n  fontDisplay: 'swap',\r\n  fontWeight: 'normal',\r\n  src: `\r\n    local('Noto Sans'),\r\n    local('NotoSans-Bold'),\r\n    url(${NotoSansBold}) format('ttf')\r\n  `,\r\n};\r\n\r\nconst palette = {\r\n  primary: { main: '#f99028' },\r\n  secondary: { main: '#2490ff' },\r\n};\r\n\r\nconst typography = {\r\n  fontFamily: ['\"Noto Sans\"', '\"Roboto\"', '\"Helvetica\"'].join(','),\r\n  overrides: {\r\n    MuiCssBaseline: {\r\n      '@global': {\r\n        '@font-face': [notoSansRegular, notoSansBold],\r\n      },\r\n    },\r\n  },\r\n};\r\n\r\nconst themeName = 'Sea Buckthorn Dodger Blue Goats';\r\n\r\nexport default createMuiTheme({ palette, typography, themeName });\r\n","const productsReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'SET_PRODUCTS':\r\n      return action.products;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default productsReducer;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport productsReducer from '../reducer/productsReducer';\r\n\r\nexport const ProductsContext = React.createContext();\r\n\r\nconst ProductsContextProvider = ({ children }) => {\r\n  const [state, dispatch] = React.useReducer(productsReducer, { products: [] });\r\n  return (\r\n    <ProductsContext.Provider value={{ state, dispatch }}>{children}</ProductsContext.Provider>\r\n  );\r\n};\r\n\r\nProductsContextProvider.propTypes = {\r\n  children: PropTypes.arrayOf(PropTypes.node).isRequired,\r\n};\r\n\r\nexport default ProductsContextProvider;\r\n","import Cookies from 'js-cookie';\r\n\r\nexport const getUser = () => Cookies.get('signedin');\r\n\r\nexport const deleteUser = () => Cookies.removeItem('signedin');\r\n\r\nexport const saveUser = () => {\r\n  Cookies.set('signedin', true, { expires: 1 });\r\n};\r\n\r\nconst NEW_CART = { total: 0, products: [] };\r\n\r\nexport const getCart = () => JSON.parse(localStorage.getItem('cart'));\r\n\r\nexport const setCart = (newCart, total = 0, products = []) =>\r\n  localStorage.setItem('cart', JSON.stringify(newCart ? NEW_CART : { total, products }));\r\n\r\nexport const addProductToCart = shopProduct => {\r\n  const cart = getCart();\r\n  let productAdded;\r\n  let productExists = false;\r\n  cart.products.map(product => {\r\n    if (product._id.toString() === shopProduct._id.toString()) {\r\n      product.quantity += 1;\r\n      productExists = true;\r\n      productAdded = product;\r\n      return true;\r\n    }\r\n    return false;\r\n  });\r\n  if (!productExists) {\r\n    shopProduct.quantity = 1;\r\n    cart.products.push(shopProduct);\r\n    productAdded = shopProduct;\r\n  }\r\n  cart.total += 1;\r\n  setCart(false, cart.total, cart.products);\r\n  return productAdded;\r\n};\r\n\r\nexport const removeProductFromCart = productId => {\r\n  const cart = getCart();\r\n  let quantity = 0;\r\n  const updatedProducts = cart.products.filter(product => {\r\n    if (product._id !== productId) {\r\n      return true;\r\n    }\r\n    quantity = product.quantity;\r\n    return false;\r\n  });\r\n  cart.total -= quantity;\r\n  cart.products = updatedProducts;\r\n  setCart(false, cart.total, cart.products);\r\n  return cart;\r\n};\r\n\r\nexport const changeQuantity = (productId, quantity) => {\r\n  const cart = getCart();\r\n  let lastQuantity;\r\n  cart.products.map(product => {\r\n    if (product._id.toString() === productId.toString()) {\r\n      lastQuantity = product.quantity;\r\n      product.quantity = quantity;\r\n      return true;\r\n    }\r\n    return false;\r\n  });\r\n  cart.total += quantity - lastQuantity;\r\n  setCart(false, cart.total, cart.products);\r\n  return cart;\r\n};\r\n\r\nexport const emptyCart = () => {\r\n  setCart(true);\r\n};\r\n\r\nexport const deleteCart = () => localStorage.removeItem('cart');\r\n","import { getCart } from '../utils/localStorage';\r\n\r\nconst productsReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'SET_USER':\r\n      return {\r\n        user: {\r\n          guest: false,\r\n          ...action.user,\r\n        },\r\n      };\r\n    case 'SET_GUEST':\r\n      return {\r\n        user: {\r\n          guest: true,\r\n          cart: getCart(),\r\n        },\r\n      };\r\n    case 'REMOVE_USER':\r\n      return {\r\n        user: {\r\n          guest: true,\r\n          cart: getCart(),\r\n        },\r\n      };\r\n    case 'UPDATE_CART':\r\n      return {\r\n        user: {\r\n          ...state.user,\r\n          cart: action.cart.cartChanged,\r\n        },\r\n      };\r\n    case 'ADD_PRODUCT_TO_CART':\r\n      let productExists = false;\r\n      state.user.cart.products.map(product => {\r\n        if (product._id === action.product._id) {\r\n          product.quantity += 1;\r\n          productExists = true;\r\n        }\r\n        return true;\r\n      });\r\n      state.user.cart.total += 1;\r\n      if (!productExists) state.user.cart.products.push(action.product);\r\n      return {\r\n        user: {\r\n          ...state.user,\r\n          cart: { ...state.user.cart },\r\n        },\r\n      };\r\n    case 'EMPTY_CART':\r\n      return {\r\n        user: {\r\n          ...state.user,\r\n          cart: {\r\n            total: 0,\r\n            products: [],\r\n          },\r\n        },\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default productsReducer;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport userReducer from '../reducer/userReducer';\r\n\r\nexport const UserContext = React.createContext();\r\n\r\nconst initializeState = {\r\n  user: {\r\n    guest: true,\r\n    cart: {\r\n      total: 0,\r\n      products: [],\r\n    },\r\n  },\r\n};\r\n\r\nconst UserContextProvider = ({ children }) => {\r\n  const [state, dispatch] = React.useReducer(userReducer, initializeState);\r\n  return <UserContext.Provider value={{ state, dispatch }}>{children}</UserContext.Provider>;\r\n};\r\n\r\nUserContextProvider.propTypes = {\r\n  children: PropTypes.arrayOf(PropTypes.node).isRequired,\r\n};\r\n\r\nexport default UserContextProvider;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport MaterialTable, { MTablePagination } from 'material-table';\r\nimport RemoveShoppingCartOutlinedIcon from '@material-ui/icons/RemoveShoppingCartOutlined';\r\nimport NumericInput from 'react-numeric-input';\r\n\r\nconst CartItems = ({ productsData, removeItem, changeQuantity }) => (\r\n  <MaterialTable\r\n    options={{\r\n      showFirstLastPageButtons: false,\r\n      search: false,\r\n      sorting: false,\r\n      draggable: false,\r\n      emptyRowsWhenPaging: false,\r\n      padding: 'dense',\r\n      pageSizeOptions: [],\r\n      pageSize: 10,\r\n      headerStyle: {\r\n        fontWeight: '800',\r\n      },\r\n      actionsCellStyle: {\r\n        padding: '0 16px',\r\n      },\r\n    }}\r\n    title=\"Cart Summary\"\r\n    columns={[\r\n      { title: 'Product', field: 'title' },\r\n      { title: 'Price', field: 'price' },\r\n      {\r\n        title: 'Quantity',\r\n        field: 'quantity',\r\n        render: rowData => (\r\n          <NumericInput\r\n            min={1}\r\n            max={50}\r\n            value={rowData.quantity}\r\n            onChange={valueAsNumber => changeQuantity(rowData._id, valueAsNumber)}\r\n          />\r\n        ),\r\n      },\r\n    ]}\r\n    data={productsData}\r\n    components={{\r\n      Pagination: props => {\r\n        const { count, rowsPerPage } = props;\r\n        if (count % rowsPerPage === count) return null;\r\n        return <MTablePagination {...props} />; // eslint-disable-line\r\n      },\r\n    }}\r\n    actions={[\r\n      {\r\n        icon: () => <RemoveShoppingCartOutlinedIcon color=\"secondary\" />,\r\n        tooltip: 'Remove Item',\r\n        onClick: (event, rowData) => {\r\n          removeItem(rowData._id);\r\n        },\r\n      },\r\n    ]}\r\n  />\r\n);\r\n\r\nCartItems.propTypes = {\r\n  productsData: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  removeItem: PropTypes.func.isRequired,\r\n  changeQuantity: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default CartItems;\r\n","import gql from 'graphql-tag';\r\n\r\nexport const GET_CATEGORIES = gql`\r\n  query categories {\r\n    categories {\r\n      _id\r\n      title\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_CATEGORY = gql`\r\n  query category($id: String!) {\r\n    category(id: $id) {\r\n      title\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ADD_CATEGORY = gql`\r\n  mutation category($title: String!) {\r\n    category(title: $title) {\r\n      title\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_CART = gql`\r\n  query cart {\r\n    cart {\r\n      total\r\n      products {\r\n        _id\r\n        title\r\n        price\r\n        quantity\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ADD_USER = gql`\r\n  mutation user(\r\n    $firstName: String!\r\n    $lastName: String!\r\n    $birthDate: Date!\r\n    $email: String!\r\n    $password: String!\r\n  ) {\r\n    user(\r\n      firstName: $firstName\r\n      lastName: $lastName\r\n      birthDate: $birthDate\r\n      email: $email\r\n      password: $password\r\n    ) {\r\n      _id\r\n      email\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_USER = gql`\r\n  query getUser {\r\n    getUser {\r\n      _id\r\n      firstName\r\n      lastName\r\n      cart {\r\n        total\r\n        products {\r\n          _id\r\n          title\r\n          price\r\n          quantity\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const LOGIN_USER = gql`\r\n  mutation loginUser($email: String!, $password: String!) {\r\n    loginUser(email: $email, password: $password) {\r\n      success\r\n    }\r\n  }\r\n`;\r\n\r\nexport const LOGOUT_USER = gql`\r\n  mutation logoutUser {\r\n    logoutUser\r\n  }\r\n`;\r\n\r\nexport const ADD_TO_CART = gql`\r\n  mutation addToCart($productId: String!) {\r\n    addToCart(productId: $productId) {\r\n      _id\r\n      title\r\n      price\r\n      quantity\r\n    }\r\n  }\r\n`;\r\n\r\nexport const REMOVE_FROM_CART = gql`\r\n  mutation removeFromCart($productId: String!) {\r\n    removeFromCart(productId: $productId) {\r\n      total\r\n      products {\r\n        _id\r\n        title\r\n        price\r\n        quantity\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const CHANGE_QUANTITY = gql`\r\n  mutation changeQuantity($productId: String!, $quantity: Int!) {\r\n    changeQuantity(productId: $productId, quantity: $quantity) {\r\n      total\r\n      products {\r\n        _id\r\n        title\r\n        price\r\n        quantity\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const EMPTY_CART = gql`\r\n  mutation emptyCart {\r\n    emptyCart\r\n  }\r\n`;\r\n\r\nexport const CART_CHANGED = gql`\r\n  subscription cartChanged {\r\n    cartChanged {\r\n      total\r\n      products {\r\n        _id\r\n        title\r\n        price\r\n        quantity\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_LIMIT = gql`\r\n  query getLimit {\r\n    limit @client\r\n  }\r\n`;\r\n\r\nexport const GET_PRODUCTS = gql`\r\n  query getProducts($limit: Int, $category: String) {\r\n    products(limit: $limit, category: $category) {\r\n      _id\r\n      title\r\n      category\r\n      thumbnail\r\n      price\r\n      rating\r\n      voters\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_PRODUCT = gql`\r\n  query getProduct($id: Int) {\r\n    product(id: $id) {\r\n      _id\r\n      title\r\n      thumbnail\r\n      price\r\n      rating\r\n      voters\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ADD_RATING = gql`\r\n  mutation updateProductRating($id: Int!, $rating: Int!) {\r\n    updateProductRating(id: $id, rating: $rating) {\r\n      _id\r\n      rating\r\n      voters\r\n    }\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport ReactRouterPropTypes from 'react-router-prop-types';\r\nimport { useMutation } from 'react-apollo';\r\nimport { makeStyles, styled } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { UserContext } from '../../context/UserContext';\r\nimport CartItems from './CartItems';\r\nimport { CHANGE_QUANTITY, REMOVE_FROM_CART } from '../../constants';\r\nimport {\r\n  removeProductFromCart,\r\n  changeQuantity as changeLocalQuantity,\r\n} from '../../utils/localStorage';\r\n\r\nconst useStyles = makeStyles({\r\n  card: {\r\n    margin: '8px 0',\r\n  },\r\n});\r\n\r\nconst ProductsTableWrapper = styled('div')({\r\n  margin: '0 48px',\r\n});\r\n\r\nconst Cart = ({ history }) => {\r\n  const classes = useStyles();\r\n  const [totalForPayment, setTotalForPayment] = React.useState(0);\r\n  const { state, dispatch } = React.useContext(UserContext);\r\n\r\n  const computeTotal = () => {\r\n    let totalForPaymentCalculation = 0;\r\n    state.user.cart.products.map(product => {\r\n      totalForPaymentCalculation += product.price * product.quantity;\r\n      return true;\r\n    });\r\n    return Math.round(totalForPaymentCalculation * 100) / 100;\r\n  };\r\n\r\n  React.useEffect(() => setTotalForPayment(computeTotal()), [state.user.cart.total]);\r\n\r\n  const [removeFromCart] = useMutation(REMOVE_FROM_CART);\r\n  const handleRemoveItem = async productId => {\r\n    if (!state.user.guest) await removeFromCart({ variables: { productId } });\r\n    else {\r\n      const cart = removeProductFromCart(productId);\r\n      dispatch({ type: 'UPDATE_CART', cart: { cartChanged: cart } });\r\n    }\r\n  };\r\n\r\n  const [changeQuantity] = useMutation(CHANGE_QUANTITY);\r\n  const handleQuantityChange = async (productId, quantity) => {\r\n    if (!state.user.guest) {\r\n      await changeQuantity({\r\n        variables: { productId, quantity },\r\n      });\r\n    } else {\r\n      const cart = changeLocalQuantity(productId, quantity);\r\n      dispatch({ type: 'UPDATE_CART', cart: { cartChanged: cart } });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ProductsTableWrapper>\r\n        <CartItems\r\n          productsData={state.user.cart.products}\r\n          removeItem={handleRemoveItem}\r\n          changeQuantity={handleQuantityChange}\r\n        />\r\n        <Card className={classes.card}>\r\n          <CardContent>Total For Payment: {totalForPayment}$</CardContent>\r\n          <CardActions>\r\n            <Button\r\n              onClick={() => {\r\n                history.push('/checkout');\r\n              }}\r\n            >\r\n              Continue to checkout\r\n            </Button>\r\n          </CardActions>\r\n        </Card>\r\n      </ProductsTableWrapper>\r\n    </>\r\n  );\r\n};\r\n\r\nCart.propTypes = {\r\n  history: ReactRouterPropTypes.history.isRequired,\r\n};\r\n\r\nexport default Cart;\r\n","import React from 'react';\r\nimport ReactRouterPropTypes from 'react-router-prop-types';\r\nimport { Query } from 'react-apollo';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Box from '@material-ui/core/Box';\r\nimport { Link } from '@material-ui/core';\r\nimport { GET_CATEGORIES } from '../../constants';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    padding: '0 1% 0 2%',\r\n    color: theme.palette.grey['400'],\r\n    fontSize: '1.5rem',\r\n    '-o-transition': '.5s',\r\n    '-ms-transition': '.5s',\r\n    '-moz-transition': '.5s',\r\n    '-webkit-transition': '.5s',\r\n    transition: '.5s',\r\n    '&:first-child': {\r\n      paddingLeft: 0,\r\n    },\r\n    '&:hover': {\r\n      color: theme.palette.primary.main,\r\n    },\r\n  },\r\n}));\r\n\r\nconst SubHeader = ({ history }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      {history}\r\n      <Box>\r\n        <Query query={GET_CATEGORIES}>\r\n          {({ loading, error, data }) => {\r\n            if (loading || error) {\r\n              return loading ? 'Loading...' : error;\r\n            }\r\n            return data.categories.map(category => (\r\n              <Link\r\n                className={classes.root}\r\n                variant=\"body1\"\r\n                href={`/category/${category._id}`}\r\n                key={category._id}\r\n              >\r\n                {category.title}\r\n              </Link>\r\n            ));\r\n          }}\r\n        </Query>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nSubHeader.propTypes = {\r\n  history: ReactRouterPropTypes.history.isRequired,\r\n};\r\n\r\nexport default SubHeader;\r\n","import Skeleton from '@material-ui/lab/Skeleton';\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Mutation } from 'react-apollo';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Button from '@material-ui/core/Button';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport AddShoppingCartIcon from '@material-ui/icons/AddShoppingCart';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Rating from 'material-ui-rating';\r\nimport { ADD_RATING, ADD_TO_CART } from '../../constants';\r\nimport { UserContext } from '../../context/UserContext';\r\nimport { getUser, addProductToCart } from '../../utils/localStorage';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: '350px',\r\n  },\r\n  ratingIconButton: {\r\n    padding: '4px',\r\n  },\r\n  media: {\r\n    width: '350px',\r\n  },\r\n  content: {\r\n    paddingBottom: '0',\r\n    whiteSpace: 'no-wrap',\r\n  },\r\n  actions: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n  },\r\n});\r\n\r\nconst ProductItem = ({ data }) => {\r\n  const { state, dispatch } = React.useContext(UserContext);\r\n  const [imageLoading, setImageLoading] = React.useState(true);\r\n  const [rating, setRating] = React.useState(Math.round(data.voters / data.rating));\r\n  const [hover, setHover] = React.useState(false);\r\n  const auth = Boolean(getUser());\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <Card className={classes.root}>\r\n      {imageLoading && (\r\n        <Skeleton\r\n          animation=\"wave\"\r\n          variant=\"rect\"\r\n          className={classes.media}\r\n          style={{ height: '350px' }}\r\n        />\r\n      )}\r\n      <img\r\n        onLoad={() => setImageLoading(false)}\r\n        src={data.thumbnail}\r\n        className={classes.media}\r\n        alt={data.title}\r\n      />\r\n      <CardContent className={classes.content}>\r\n        <Typography gutterBottom variant=\"h6\" align=\"center\">\r\n          {data.title}\r\n        </Typography>\r\n        <Typography gutterBottom variant=\"subtitle1\" align=\"center\" color=\"primary\">\r\n          {data.price}$\r\n        </Typography>\r\n      </CardContent>\r\n      <CardActions className={classes.actions}>\r\n        <Mutation\r\n          mutation={ADD_RATING}\r\n          update={(cache, { data: { updateProductRating } }) => {\r\n            return setRating(Math.round(updateProductRating.voters / updateProductRating.rating));\r\n          }}\r\n        >\r\n          {(updateProductRating, { called }) => (\r\n            <Rating\r\n              classes={{ iconButton: classes.ratingIconButton }}\r\n              value={rating}\r\n              onChange={value => {\r\n                if (!called) {\r\n                  updateProductRating({\r\n                    variables: { id: data.id, rating: value },\r\n                  });\r\n                }\r\n              }}\r\n            />\r\n          )}\r\n        </Mutation>\r\n        <Mutation mutation={ADD_TO_CART} ignoreResults={false}>\r\n          {addToCart => (\r\n            <Button\r\n              productId={data.id}\r\n              variant=\"outlined\"\r\n              color=\"primary\"\r\n              onClick={async () => {\r\n                if (!state.user.guest) {\r\n                  await addToCart({\r\n                    variables: { productId: data._id },\r\n                  });\r\n                } else {\r\n                  const productAdded = addProductToCart(data);\r\n                  dispatch({ type: 'ADD_PRODUCT_TO_CART', product: productAdded });\r\n                }\r\n              }}\r\n              onMouseEnter={() => setHover(true)}\r\n              onMouseOver={e => e.stopPropagation()}\r\n              onMouseLeave={() => setHover(false)}\r\n              onFocus={() => setHover(true)}\r\n              onBlur={() => setHover(false)}\r\n            >\r\n              {hover && (\r\n                <Fade in={hover} timeout={1000}>\r\n                  <AddShoppingCartIcon />\r\n                </Fade>\r\n              )}{' '}\r\n              ADD TO CART\r\n            </Button>\r\n          )}\r\n        </Mutation>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nProductItem.propTypes = {\r\n  data: PropTypes.shape({\r\n    thumbnail: PropTypes.string.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    id: PropTypes.number.isRequired,\r\n    rating: PropTypes.number.isRequired,\r\n    voters: PropTypes.number.isRequired,\r\n  }).isRequired,\r\n};\r\n\r\nexport default ProductItem;\r\n\r\n// TODO media query for rating and add to user button\r\n","import React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\n\r\nconst useStyles = makeStyles({\r\n  media: {\r\n    width: '350px',\r\n    height: '350px',\r\n  },\r\n  content: {\r\n    paddingBottom: '0',\r\n  },\r\n  actions: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    height: '50px',\r\n  },\r\n  buttons: {\r\n    height: '50px',\r\n  },\r\n});\r\n\r\nconst SkeletonProducts = ({ limit }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      {Array(limit)\r\n        .fill()\r\n        .map((data, id) => (\r\n          // eslint-disable-next-line react/no-array-index-key\r\n          <Grid item md={3} key={id}>\r\n            <Card>\r\n              <Skeleton animation=\"wave\" variant=\"rect\" className={classes.media} />\r\n              <CardContent className={classes.content}>\r\n                <Skeleton animation=\"wave\" variant=\"text\" />\r\n                <Skeleton animation=\"wave\" variant=\"text\" />\r\n              </CardContent>\r\n              <CardActions className={classes.actions}>\r\n                <Skeleton animation=\"wave\" variant=\"rect\" className={classes.buttons} />\r\n                <Skeleton animation=\"wave\" variant=\"rect\" className={classes.buttons} />\r\n              </CardActions>\r\n            </Card>\r\n          </Grid>\r\n        ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SkeletonProducts;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withApollo } from 'react-apollo';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nconst useStyles = makeStyles({\r\n  gridItem: {\r\n    maxHeight: '36px',\r\n  },\r\n});\r\n\r\nconst Filter = ({ limit, client }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      <Typography display=\"inline\" variant=\"button\">\r\n        Number of products:{' '}\r\n      </Typography>\r\n      <Select\r\n        className={classes.gridItem}\r\n        variant=\"outlined\"\r\n        id=\"limit\"\r\n        value={limit}\r\n        onChange={e => client.writeData({ data: { limit: e.target.value } })}\r\n      >\r\n        <option value={4}>4</option>\r\n        <option value={16}>16</option>\r\n        <option value={64}>64</option>\r\n      </Select>\r\n    </>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  limit: PropTypes.number.isRequired,\r\n  client: PropTypes.shape({\r\n    writeData: PropTypes.func.isRequired,\r\n  }).isRequired,\r\n};\r\n\r\nexport default withApollo(Filter);\r\n","import React from 'react';\r\nimport { useQuery } from 'react-apollo';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles, styled } from '@material-ui/core/styles';\r\nimport SubHeader from '../Header/SubHeader';\r\nimport ProductItem from './ProductItem';\r\nimport SkeletonProducts from './SkeletonProducts';\r\nimport Filter from './Filter';\r\nimport { ProductsContext } from '../../context/ProductsContext';\r\nimport { GET_PRODUCTS, GET_LIMIT } from '../../constants';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    margin: theme.spacing(6),\r\n  },\r\n}));\r\n\r\nconst Alert = styled('span')`\r\n  width: 100%;\r\n  text-align: center;\r\n`;\r\n\r\nconst Products = () => {\r\n  const classes = useStyles();\r\n  const { state, dispatch } = React.useContext(ProductsContext);\r\n  const { data } = useQuery(GET_LIMIT);\r\n  const { loading, error, data: productsData } = useQuery(GET_PRODUCTS, {\r\n    variables: { limit: data.limit },\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    if (!loading) dispatch({ type: 'SET_PRODUCTS', products: productsData });\r\n  }, [productsData, loading, dispatch]);\r\n\r\n  if (loading)\r\n    return (\r\n      <Grid container spacing={3} classes={{ container: classes.root }}>\r\n        <SkeletonProducts limit={data.limit} />\r\n      </Grid>\r\n    );\r\n  if (error) return <Alert>{error}</Alert>;\r\n\r\n  return (\r\n    <Grid container spacing={3} classes={{ container: classes.root }}>\r\n      <Grid item md={8}>\r\n        <SubHeader />\r\n      </Grid>\r\n      <Grid item md={4} alignItems=\"flex-end\">\r\n        <Filter limit={parseInt(data.limit, 10)} />\r\n      </Grid>\r\n      {state.products.map(product => (\r\n        <Grid item md={3} key={product._id.toString()}>\r\n          <ProductItem key={product._id.toString()} data={product} />\r\n        </Grid>\r\n      ))}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Products;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ShopIcon from '@material-ui/icons/Shop';\r\nimport RemoveShoppingCartOutlinedIcon from '@material-ui/icons/RemoveShoppingCartOutlined';\r\nimport Menu from '@material-ui/core/Menu';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    textDecoration: 'none',\r\n    padding: '0 1% 0 2%',\r\n    color: theme.palette.grey['400'],\r\n    '-o-transition': '.5s',\r\n    '-ms-transition': '.5s',\r\n    '-moz-transition': '.5s',\r\n    '-webkit-transition': '.5s',\r\n    transition: '.5s',\r\n    '&:hover': {\r\n      color: theme.palette.primary.main,\r\n    },\r\n  },\r\n  list: {\r\n    '& > li': {\r\n      padding: '8px 12px 6px 4px',\r\n    },\r\n  },\r\n}));\r\n\r\nconst CartMenu = ({ anchorEl, open, onClose, emptyCart }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Menu\r\n      classes={{ list: classes.list }}\r\n      anchorEl={anchorEl}\r\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      // id={menuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      open={open}\r\n      onClose={onClose}\r\n    >\r\n      <MenuItem className={classes.root}>\r\n        <Link to=\"/cart\" className={classes.root}>\r\n          View Cart\r\n        </Link>\r\n      </MenuItem>\r\n      <Divider />\r\n      <MenuItem className={classes.root}>\r\n        <ShopIcon color=\"primary\" fontSize=\"small\" />\r\n        &nbsp; Purchase\r\n      </MenuItem>\r\n      <MenuItem className={classes.root} onClick={emptyCart}>\r\n        <RemoveShoppingCartOutlinedIcon color=\"primary\" fontSize=\"small\" />\r\n        &nbsp; Empty Cart\r\n      </MenuItem>\r\n    </Menu>\r\n  );\r\n};\r\n\r\nexport default CartMenu;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\nimport React from 'react';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MeetingRoomOutlinedIcon from '@material-ui/icons/MeetingRoomOutlined';\r\nimport Menu from '@material-ui/core/Menu';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    textDecoration: 'none',\r\n    padding: '0 1% 0 2%',\r\n    color: theme.palette.grey['400'],\r\n    '-o-transition': '.5s',\r\n    '-ms-transition': '.5s',\r\n    '-moz-transition': '.5s',\r\n    '-webkit-transition': '.5s',\r\n    transition: '.5s',\r\n    '&:hover': {\r\n      color: theme.palette.primary.main,\r\n    },\r\n  },\r\n  list: {\r\n    '& > li': {\r\n      padding: '8px 12px 6px 4px',\r\n    },\r\n  },\r\n}));\r\n\r\nconst UserMenu = ({ anchorEl, open, onClose, logout }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Menu\r\n      classes={{ list: classes.list }}\r\n      anchorEl={anchorEl}\r\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      // id={menuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      open={open}\r\n      onClose={onClose}\r\n    >\r\n      <MenuItem className={classes.root} onClick={logout}>\r\n        <MeetingRoomOutlinedIcon color=\"secondary\" fontSize=\"small\" />\r\n        &nbsp; Logout\r\n      </MenuItem>\r\n    </Menu>\r\n  );\r\n};\r\n\r\nexport default UserMenu;\r\n","import React from 'react';\r\nimport { useQuery, useMutation, useSubscription } from 'react-apollo';\r\nimport Cookies from 'js-cookie';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport ShoppingCart from '@material-ui/icons/ShoppingCart';\r\nimport { EMPTY_CART, LOGOUT_USER, GET_USER, CART_CHANGED } from '../../constants';\r\nimport { UserContext } from '../../context/UserContext';\r\nimport { getUser, emptyCart as emptyLocalCart, getCart, setCart } from '../../utils/localStorage';\r\nimport CartMenu from './CartMenu';\r\nimport UserMenu from './UserMenu';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  button: {\r\n    padding: '5px',\r\n    margin: '5px',\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nconst StyledBadge = withStyles(theme => ({\r\n  badge: {\r\n    right: -3,\r\n    top: 13,\r\n    border: `2px solid ${theme.palette.background.paper}`,\r\n    padding: '0 4px',\r\n  },\r\n}))(Badge);\r\n\r\nconst Appbar = () => {\r\n  const { state, dispatch } = React.useContext(UserContext);\r\n  const { loading, data } = useQuery(GET_USER);\r\n  const { data: updatedCart, loading: cartItemAddedLoading } = useSubscription(CART_CHANGED);\r\n  React.useEffect(() => {\r\n    if (getUser()) {\r\n      if (!cartItemAddedLoading && updatedCart)\r\n        dispatch({\r\n          type: 'UPDATE_CART',\r\n          cart: updatedCart,\r\n        });\r\n      else if (!loading && data) dispatch({ type: 'SET_USER', user: data.getUser });\r\n    } else {\r\n      if (!getCart()) setCart(true);\r\n      dispatch({ type: 'SET_GUEST' });\r\n      Cookies.remove('signedin');\r\n    }\r\n  }, [data, loading, updatedCart, cartItemAddedLoading]);\r\n  // TODO add loading figure to user appbar right side\r\n\r\n  const [anchorElCart, setAnchorElCart] = React.useState(null);\r\n  const [anchorElUser, setAnchorElUser] = React.useState(null);\r\n  const classes = useStyles();\r\n\r\n  const handleCartMenuOpen = e => {\r\n    setAnchorElCart(e.currentTarget);\r\n  };\r\n\r\n  const handleCartMenuClose = e => {\r\n    setAnchorElCart(null);\r\n  };\r\n\r\n  const handleUserMenuOpen = e => {\r\n    setAnchorElUser(e.currentTarget);\r\n  };\r\n\r\n  const handleUserMenuClose = e => {\r\n    setAnchorElUser(null);\r\n  };\r\n\r\n  const [emptyCart] = useMutation(EMPTY_CART);\r\n\r\n  const handleEmptyCart = async () => {\r\n    if (getUser()) await emptyCart();\r\n    else {\r\n      emptyLocalCart();\r\n      dispatch({ type: 'EMPTY_CART' });\r\n    }\r\n  };\r\n\r\n  const [logoutUser] = useMutation(LOGOUT_USER);\r\n\r\n  const handleLogout = () => {\r\n    const logoutSuccess = logoutUser();\r\n    if (logoutSuccess) {\r\n      Cookies.remove('signedin');\r\n      dispatch({ type: 'REMOVE_USER' });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"fixed\">\r\n        <Toolbar>\r\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            Photos\r\n          </Typography>\r\n          <div>\r\n            {state.user.guest && (\r\n              <>\r\n                <Button\r\n                  href=\"/login/\"\r\n                  className={classes.button}\r\n                  color=\"secondary\"\r\n                  disableElevation\r\n                >\r\n                  Login\r\n                </Button>\r\n                <Button className={classes.button} variant=\"outlined\" color=\"secondary\">\r\n                  Sign Up\r\n                </Button>\r\n              </>\r\n            )}\r\n            {!state.user.guest && (\r\n              <>\r\n                <IconButton\r\n                  aria-label=\"account of current user\"\r\n                  aria-haspopup=\"true\"\r\n                  onClick={handleUserMenuOpen}\r\n                  color=\"inherit\"\r\n                >\r\n                  <AccountCircle fontSize=\"large\" color=\"secondary\" />\r\n                </IconButton>\r\n                <UserMenu\r\n                  anchorEl={anchorElUser}\r\n                  open={Boolean(anchorElUser)}\r\n                  onClose={handleUserMenuClose}\r\n                  logout={handleLogout}\r\n                />\r\n              </>\r\n            )}\r\n            <IconButton\r\n              edge=\"end\"\r\n              aria-label=\"shopping cart\"\r\n              // aria-controls={menuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleCartMenuOpen}\r\n            >\r\n              <StyledBadge badgeContent={state.user.cart.total} color=\"secondary\">\r\n                <ShoppingCart fontSize=\"large\" color=\"secondary\" />\r\n              </StyledBadge>\r\n            </IconButton>\r\n            <CartMenu\r\n              anchorEl={anchorElCart}\r\n              open={Boolean(anchorElCart)}\r\n              onClose={handleCartMenuClose}\r\n              emptyCart={handleEmptyCart}\r\n            />\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Appbar;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Link from '@material-ui/core/Link';\r\nimport HeaderBgImg from './header-bg.png';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  gridItem: {\r\n    margin: 'auto',\r\n  },\r\n  mainFeaturedPost: {\r\n    position: 'relative',\r\n    backgroundColor: theme.palette.background.default,\r\n    color: theme.palette.text.primary,\r\n    marginTop: theme.spacing(8),\r\n    marginBottom: theme.spacing(4),\r\n    backgroundSize: 'cover',\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundPosition: 'center',\r\n  },\r\n  mainFeaturedPostContent: {\r\n    position: 'relative',\r\n    padding: theme.spacing(5),\r\n    [theme.breakpoints.up('md')]: {\r\n      padding: theme.spacing(6),\r\n      paddingRight: 0,\r\n    },\r\n  },\r\n}));\r\n\r\nconst HeaderBg = () => {\r\n  return <img src={HeaderBgImg} alt=\"Header\" style={{ width: '100%' }} />;\r\n};\r\n\r\nconst Header = props => {\r\n  const classes = useStyles();\r\n  const { post } = props;\r\n\r\n  return (\r\n    <Grid container className={classes.mainFeaturedPost}>\r\n      <Grid item md={6} classes={{ item: classes.gridItem }}>\r\n        <div className={classes.mainFeaturedPostContent}>\r\n          <Typography component=\"h1\" variant=\"h3\" color=\"inherit\" gutterBottom>\r\n            {post.title}\r\n          </Typography>\r\n          <Typography variant=\"h5\" color=\"inherit\" paragraph>\r\n            {post.description}\r\n          </Typography>\r\n          <Link variant=\"subtitle1\" href=\"#\">\r\n            {post.linkText}\r\n          </Link>\r\n        </div>\r\n      </Grid>\r\n      <Grid item md={6}>\r\n        <HeaderBg />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  post: PropTypes.object,\r\n};\r\n\r\nHeader.defaultProps = {\r\n  post: {\r\n    imageText: HeaderBg,\r\n    title: 'shopping',\r\n    description: 'the place to shop',\r\n    linkText: '',\r\n  },\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    '& > * + *': {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nconst CustomSnackbars = ({ open, severity, message }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Snackbar open={open} autoHideDuration={6000}>\r\n        <MuiAlert elevation={6} variant=\"filled\" severity={severity}>\r\n          {message}\r\n        </MuiAlert>\r\n      </Snackbar>\r\n    </div>\r\n  );\r\n};\r\n\r\nCustomSnackbars.propTypes = {\r\n  open: PropTypes.bool.isRequired,\r\n  severity: PropTypes.string.isRequired,\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default CustomSnackbars;\r\n","import React from 'react';\r\nimport ReactRouterPropTypes from 'react-router-prop-types';\r\nimport { useMutation } from 'react-apollo';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { useForm } from 'react-hook-form';\r\nimport { saveUser } from '../../utils/localStorage';\r\nimport { GET_CART, GET_USER, LOGIN_USER } from '../../constants';\r\nimport CustomSnackbars from '../Snackbar/CustomSnackbar';\r\n\r\nconst useStyles = makeStyles({\r\n  form: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    flexDirection: 'column',\r\n    width: '30%',\r\n    margin: ' 2% auto',\r\n  },\r\n  input: {\r\n    marginBottom: '8px',\r\n  },\r\n});\r\n\r\nconst Login = ({ history }) => {\r\n  const classes = useStyles();\r\n  const [loginUser, { error }] = useMutation(LOGIN_USER);\r\n  const [email, setEmail] = React.useState('');\r\n  const [password, setPassword] = React.useState('');\r\n  const [open, setOpen] = React.useState(false);\r\n  const [message, setMessage] = React.useState('');\r\n  const [severity, setSeverity] = React.useState('');\r\n  const { register, handleSubmit, errors } = useForm();\r\n  const onSubmit = async () => {\r\n    const { data } = await loginUser({\r\n      variables: { email, password },\r\n      errorPolicy: 'all',\r\n      refetchQueries: [{ query: GET_CART }, { query: GET_USER }],\r\n    });\r\n    if (data.loginUser) {\r\n      if (data.loginUser.success) {\r\n        saveUser();\r\n        return history.goBack();\r\n      }\r\n    } else {\r\n      setMessage('Login failed. Please make sure the email address and password are correct');\r\n      setSeverity('error');\r\n      setOpen(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(onSubmit)} className={classes.form}>\r\n      <TextField\r\n        name=\"email\"\r\n        id=\"email\"\r\n        variant=\"outlined\"\r\n        onChange={e => setEmail(e.target.value)}\r\n        placeholder=\"Your email\"\r\n        className={classes.input}\r\n        inputProps={{\r\n          ref: register({\r\n            required: 'Oops! This field is required.',\r\n            pattern: {\r\n              value: /^[\\w-.]+@([\\w-]+\\.)+[\\w-]{2,4}$/,\r\n              message: 'Oh oh! You must enter a valid email address',\r\n            },\r\n          }),\r\n        }}\r\n        error={errors.email}\r\n        helperText={errors.email && errors.email.message}\r\n      />\r\n      <TextField\r\n        name=\"password\"\r\n        id=\"password\"\r\n        variant=\"outlined\"\r\n        onChange={e => setPassword(e.target.value)}\r\n        type=\"password\"\r\n        placeholder=\"Your password\"\r\n        className={classes.input}\r\n        inputProps={{\r\n          ref: register({\r\n            required: 'Oops! This field is required.',\r\n          }),\r\n        }}\r\n        error={errors.password}\r\n        helperText={errors.password && errors.password.message}\r\n      />\r\n      <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n        Login\r\n      </Button>\r\n      <CustomSnackbars message={message} severity={severity} open={open} />\r\n    </form>\r\n  );\r\n};\r\n\r\nLogin.propTypes = {\r\n  history: ReactRouterPropTypes.history.isRequired,\r\n};\r\n\r\nexport default Login;\r\n","import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n\r\nconst Products = ({ products, totalForPayment }) => {\r\n  return (\r\n    <Table aria-label=\"Products Table\">\r\n      <TableHead>\r\n        <TableCell>\r\n          <Typography variant=\"h6\">Product Name</Typography>\r\n        </TableCell>\r\n        <TableCell align=\"right\">\r\n          <Typography variant=\"h6\">Quantity</Typography>\r\n        </TableCell>\r\n        <TableCell align=\"right\">\r\n          <Typography variant=\"h6\">Total Price</Typography>\r\n        </TableCell>\r\n      </TableHead>\r\n      <TableBody>\r\n        {products.map(product => (\r\n          <TableRow key={product._id}>\r\n            <TableCell>{product.title}</TableCell>\r\n            <TableCell align=\"right\">{product.quantity}</TableCell>\r\n            <TableCell align=\"right\">\r\n              {Math.round(product.price * product.quantity * 100) / 100}$\r\n            </TableCell>\r\n          </TableRow>\r\n        ))}\r\n        <TableRow>\r\n          <TableCell colSpan={1} />\r\n          <TableCell align=\"right\">\r\n            <Typography variant=\"h6\">Total For Payment</Typography>\r\n          </TableCell>\r\n          <TableCell align=\"right\">\r\n            <Typography variant=\"h6\">{totalForPayment}$</Typography>\r\n          </TableCell>\r\n        </TableRow>\r\n      </TableBody>\r\n    </Table>\r\n  );\r\n};\r\n\r\nexport default Products;\r\n","import Button from '@material-ui/core/Button';\r\nimport React from 'react';\r\nimport 'date-fns';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport { useForm } from 'react-hook-form';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  button: {\r\n    marginTop: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst GuestDetails = ({ handleBack, handleNext }) => {\r\n  const [firstName, setFirstName] = React.useState('');\r\n  const [lastName, setLastName] = React.useState('');\r\n  const [email, setEmail] = React.useState('');\r\n  const [selectedDate, setSelectedDate] = React.useState();\r\n  const { register, handleSubmit, errors } = useForm();\r\n\r\n  const classes = useStyles();\r\n\r\n  const handleDateChange = date => setSelectedDate(date);\r\n\r\n  const onSubmit = () => handleNext();\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(onSubmit)}>\r\n      <Grid container spacing={2} style={{ with: '680px' }}>\r\n        <Grid item md={6}>\r\n          <FormControl>\r\n            <FormLabel>First Name</FormLabel>\r\n            <TextField\r\n              name=\"firstName\"\r\n              variant=\"outlined\"\r\n              value={firstName}\r\n              onChange={e => setFirstName(e.target.value)}\r\n              inputProps={{\r\n                ref: register({\r\n                  required: 'Oops! This field is required.',\r\n                }),\r\n              }}\r\n              error={errors.firstName}\r\n              helperText={errors.firstName && errors.firstName.message}\r\n            />\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item md={6}>\r\n          <FormControl>\r\n            <FormLabel>Last Name</FormLabel>\r\n            <TextField\r\n              name=\"lastName\"\r\n              variant=\"outlined\"\r\n              value={lastName}\r\n              onChange={e => setLastName(e.target.value)}\r\n              inputProps={{\r\n                ref: register({\r\n                  required: 'Oops! This field is required.',\r\n                }),\r\n              }}\r\n              error={errors.lastName}\r\n              helperText={errors.lastName && errors.lastName.message}\r\n            />\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item md={7}>\r\n          <FormControl>\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n              <KeyboardDatePicker\r\n                margin=\"normal\"\r\n                id=\"date-picker-dialog\"\r\n                label=\"Birth Date\"\r\n                format=\"MM/dd/yyyy\"\r\n                value={selectedDate}\r\n                onChange={handleDateChange}\r\n                KeyboardButtonProps={{\r\n                  'aria-label': 'change date',\r\n                }}\r\n              />\r\n            </MuiPickersUtilsProvider>\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item md={5}>\r\n          <FormControl>\r\n            <FormLabel>Email Address</FormLabel>\r\n            <TextField\r\n              name=\"email\"\r\n              variant=\"outlined\"\r\n              value={email}\r\n              onChange={e => setEmail(e.target.value)}\r\n              inputProps={{\r\n                ref: register({\r\n                  required: 'Oops! This field is required.',\r\n                  pattern: {\r\n                    value: /^[\\w-.]+@([\\w-]+\\.)+[\\w-]{2,4}$/,\r\n                    message: 'Oh oh! You must enter a valid email address',\r\n                  },\r\n                }),\r\n              }}\r\n              error={errors.email}\r\n              helperText={errors.email && errors.email.message}\r\n            />\r\n          </FormControl>\r\n        </Grid>\r\n        <Button onClick={() => handleBack()} className={classes.button}>\r\n          Back\r\n        </Button>\r\n        <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n          Submit and Continue\r\n        </Button>\r\n      </Grid>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default GuestDetails;\r\n","import Button from '@material-ui/core/Button';\r\nimport React from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Select from '@material-ui/core/Select';\r\nimport CountryByAbriviation from 'country-json/src/country-by-abbreviation.json';\r\nimport postalCodes from 'postal-codes-js';\r\n\r\nconst DelveryDetails = ({ handleNext, handleBack, setAdrress }) => {\r\n  const [firmName, setFirmName] = React.useState('');\r\n  const [recipientName, setRecipientName] = React.useState('');\r\n  const [address1, setAddress1] = React.useState('');\r\n  const [address2, setAddress2] = React.useState('');\r\n  const [country, setCountry] = React.useState('');\r\n  const [city, setCity] = React.useState('');\r\n  const [zipcode, setZipcode] = React.useState('');\r\n  const { register, handleSubmit, errors } = useForm();\r\n\r\n  const onSubmit = () => {\r\n    setAdrress({\r\n      firmName,\r\n      recipientName,\r\n      address1,\r\n      address2,\r\n      country,\r\n      city,\r\n      zipcode,\r\n    });\r\n    handleNext();\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(onSubmit)}>\r\n      <Grid container spacing={2}>\r\n        <Grid item md={12}>\r\n          <FormControl>\r\n            <FormLabel>Firm Name</FormLabel>\r\n            <TextField\r\n              name=\"firmName\"\r\n              value={firmName}\r\n              helperText=\"Optional\"\r\n              onChange={e => setFirmName(e.target.value)}\r\n            />\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item md={12}>\r\n          <FormControl>\r\n            <FormLabel>Recipient Name</FormLabel>\r\n            <TextField\r\n              name=\"recepientName\"\r\n              value={recipientName}\r\n              onChange={e => setRecipientName(e.target.value)}\r\n              inputProps={{\r\n                ref: register({\r\n                  required: 'Oops! This field is required.',\r\n                }),\r\n              }}\r\n              error={errors.recepientName}\r\n              helperText={errors.recepientName && errors.recepientName.message}\r\n            />\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item md={12}>\r\n          <FormControl>\r\n            <FormLabel>Address 1</FormLabel>\r\n            <TextField\r\n              name=\"address1\"\r\n              value={address1}\r\n              onChange={e => setAddress1(e.target.value)}\r\n              inputProps={{\r\n                ref: register({\r\n                  required: 'Oops! This field is required.',\r\n                }),\r\n              }}\r\n              error={errors.address1}\r\n              helperText={errors.address1 && errors.address1.message}\r\n            />\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item md={12}>\r\n          <FormControl>\r\n            <FormLabel>Address 2</FormLabel>\r\n            <TextField\r\n              name=\"address2\"\r\n              value={address2}\r\n              helperText=\"Optional\"\r\n              onChange={e => setAddress2(e.target.value)}\r\n            />\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item md={12}>\r\n          <FormControl>\r\n            <FormLabel>Country</FormLabel>\r\n            <Select name=\"country\" onChange={e => setCountry(e.target.value)} value={country}>\r\n              {CountryByAbriviation.map(country => (\r\n                <option key={country.abbreviation} value={country.abbreviation}>\r\n                  {country.country}\r\n                </option>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item md={6}>\r\n          <FormControl>\r\n            <FormLabel>City</FormLabel>\r\n            <TextField\r\n              name=\"city\"\r\n              value={city}\r\n              onChange={e => setCity(e.target.value)}\r\n              inputProps={{\r\n                ref: register({\r\n                  required: 'Oops! This field is required.',\r\n                }),\r\n              }}\r\n              error={errors.city}\r\n              helperText={errors.city && errors.city.message}\r\n            />\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item md={6}>\r\n          <FormControl>\r\n            <FormLabel>Zip Code</FormLabel>\r\n            <TextField\r\n              disabled={!country}\r\n              name=\"zipcode\"\r\n              value={zipcode}\r\n              onChange={e => setZipcode(e.target.value)}\r\n              helperText={\r\n                // eslint-disable-next-line no-nested-ternary\r\n                country ? errors.zipcode && errors.zipcode.message : 'Please select country first'\r\n              }\r\n              error={errors.zipcode}\r\n              inputProps={{\r\n                ref: register({\r\n                  validate: value =>\r\n                    postalCodes.validate(country, value) === true || 'zipcode is not valid',\r\n                }),\r\n              }}\r\n            />\r\n          </FormControl>\r\n        </Grid>\r\n      </Grid>\r\n      <Button onClick={() => handleBack()}>Back</Button>\r\n      <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n        Submit and Continue\r\n      </Button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default DelveryDetails;\r\n","import React from 'react';\r\nimport { CardElement, useElements, useStripe } from '@stripe/react-stripe-js';\r\nimport Button from '@material-ui/core/Button';\r\nimport './StripeCardSectionStyles.css';\r\n\r\nconst CARD_ELEMENT_OPTIONS = {\r\n  style: {\r\n    base: {\r\n      color: '#32325d',\r\n      fontFamily: '\"Helvetica Neue\", Helvetica, sans-serif',\r\n      fontSmoothing: 'antialiased',\r\n      fontSize: '16px',\r\n      '::placeholder': {\r\n        color: '#aab7c4',\r\n      },\r\n    },\r\n    invalid: {\r\n      color: '#fa755a',\r\n      iconColor: '#fa755a',\r\n    },\r\n  },\r\n};\r\n\r\nconst StripeButton = ({ address, totalPayment }) => {\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n\r\n  const handleServerResponse = async response => {\r\n    if (response.error) {\r\n      // Show error from server on payment form\r\n    } else if (response.requires_action) {\r\n      // Use Stripe.js to handle the required card action\r\n      const { error: errorAction, paymentIntent } = await stripe.handleCardAction(\r\n        response.payment_intent_client_secret\r\n      );\r\n\r\n      if (errorAction) {\r\n        // Show error from Stripe.js in payment form\r\n      } else {\r\n        // The card action has been handled\r\n        // The PaymentIntent can be confirmed again on the server\r\n        const serverResponse = await fetch('http://localhost:4000/payment', {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify({\r\n            payment_intent_id: paymentIntent.id,\r\n            payment_total: totalPayment * 100, // USD to cents\r\n          }),\r\n        });\r\n        handleServerResponse(await serverResponse.json());\r\n      }\r\n    } else {\r\n      console.log('success');\r\n    }\r\n  };\r\n\r\n  const stripePaymentMethodHandler = async result => {\r\n    if (result.error) {\r\n      // Show error in payment form\r\n      console.log(result.error);\r\n    } else {\r\n      // Otherwise send paymentMethod.id to your server (see Step 4)\r\n      const res = await fetch('http://localhost:4000/payment', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({\r\n          payment_method_id: result.paymentMethod.id,\r\n          payment_total: totalPayment * 100, // USD to cents\r\n        }),\r\n      });\r\n      const paymentResponse = await res.json();\r\n\r\n      handleServerResponse(paymentResponse);\r\n    }\r\n  };\r\n\r\n  const handlePayment = async event => {\r\n    event.preventDefault();\r\n\r\n    const result = await stripe.createPaymentMethod({\r\n      type: 'card',\r\n      card: elements.getElement(CardElement),\r\n      billing_details: {\r\n        // Include any additional collected billing details.\r\n        address: {\r\n          city: address.city,\r\n          country: address.country,\r\n          line1: address.address1,\r\n          line2: address.address2,\r\n          postal_code: address.zipcode,\r\n          state: null,\r\n        },\r\n        email: null,\r\n        name: address.recipientName,\r\n      },\r\n    });\r\n    stripePaymentMethodHandler(result);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handlePayment}>\r\n      Card details\r\n      <CardElement options={CARD_ELEMENT_OPTIONS} />\r\n      <Button type=\"submit\" disabled={!stripe}>\r\n        Submit Payment\r\n      </Button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default StripeButton;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport StepContent from '@material-ui/core/StepContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Elements } from '@stripe/react-stripe-js';\r\nimport { loadStripe } from '@stripe/stripe-js';\r\nimport marked from 'marked';\r\nimport { getUser } from '../../utils/localStorage';\r\nimport Products from './Products';\r\nimport GuestDetails from './GuestDetails';\r\nimport DelveryDetails from './DelveryDetails';\r\nimport StripeButton from './StripeButton';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  button: {\r\n    marginTop: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  actionsContainer: {\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  resetContainer: {\r\n    padding: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nconst Checkout = ({ history, items, totalForPayment }) => {\r\n  const [termsAndConditions, setTermsAndConditions] = React.useState();\r\n  const steps = [\r\n    'Purchase Summary',\r\n    'Personal Details',\r\n    'Delivery',\r\n    'Terms & Conditions',\r\n    'Payment',\r\n  ];\r\n\r\n  const getTermsAndConditions = () => {\r\n    const mdFile = require('./temsandconditions.md');\r\n    fetch(mdFile)\r\n      .then(res => res.text())\r\n      .then(text => setTermsAndConditions(marked(text)))\r\n      .catch(console.log);\r\n  };\r\n\r\n  const [guestForm, setGuestForm] = React.useState(false);\r\n\r\n  const classes = useStyles();\r\n\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n\r\n  const [address, setAddress] = React.useState({});\r\n\r\n  React.useEffect(() => getTermsAndConditions, [activeStep]);\r\n\r\n  const handleNext = () => {\r\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setActiveStep(0);\r\n  };\r\n\r\n  const handleGuest = () => setGuestForm(true);\r\n\r\n  const handleLogin = () => {\r\n    history.push('/login');\r\n  };\r\n\r\n  const handleComplete = () => 'Finshed';\r\n\r\n  const handleGuestRegister = () => alert('guest registered');\r\n\r\n  const [hideButton, setHideButton] = React.useState(false);\r\n\r\n  React.useEffect(() => {\r\n    setHideButton(guestForm);\r\n  }, [guestForm]);\r\n\r\n  React.useEffect(() => {\r\n    if (activeStep === 2) setHideButton(true);\r\n  }, [activeStep]);\r\n\r\n  const stripePromise = loadStripe('pk_test_8u9bKgTYKQsLEKv4YZ0THX8b00XCTueNVx');\r\n\r\n  const handleSetAddress = deliveryAddress => {\r\n    setAddress(deliveryAddress);\r\n  };\r\n\r\n  const stepButton = step => {\r\n    switch (step) {\r\n      case 0:\r\n      case 2:\r\n        return {\r\n          labelLeft: 'Back',\r\n          functionLeft: () => handleBack(),\r\n          labelRight: 'Next',\r\n          functionRight: () => handleNext(),\r\n        };\r\n      case 1:\r\n        return {\r\n          labelLeft: getUser() ? 'Back' : 'Continue as a guest',\r\n          functionLeft: () => (getUser() ? handleBack() : handleGuest()),\r\n          labelRight: getUser() ? 'Next' : 'Login',\r\n          functionRight: () => (getUser() ? handleNext() : handleLogin()),\r\n        };\r\n      case 3:\r\n        return {\r\n          labelLeft: 'Back',\r\n          functionLeft: () => handleBack(),\r\n          labelRight: 'I Agree',\r\n          functionRight: () => handleNext(),\r\n        };\r\n      case 4:\r\n        return {\r\n          labelLeft: 'Back',\r\n          functionLeft: () => handleBack(),\r\n          labelRight: 'Complete Purchase',\r\n          functionRight: () => handleComplete(),\r\n        };\r\n      default:\r\n        return 'Unknown button configuration';\r\n    }\r\n  };\r\n\r\n  const stepsContent = step => {\r\n    switch (step) {\r\n      case 0:\r\n        return <Products products={items} totalForPayment={totalForPayment} />;\r\n      case 1:\r\n        return !getUser() ? (\r\n          <>\r\n            {guestForm ? (\r\n              <GuestDetails\r\n                handleBack={() => {\r\n                  setGuestForm(false);\r\n                  handleBack();\r\n                }}\r\n                handleNext={() => handleNext()}\r\n              />\r\n            ) : (\r\n              <Typography variant=\"body1\" color=\"primary\">\r\n                It seems you are not connected to your account.\r\n                <br />\r\n                Would you like to continue as a guest, or would you rather login to your account?\r\n                <br />\r\n                <br />\r\n              </Typography>\r\n            )}\r\n          </>\r\n        ) : null;\r\n      case 2:\r\n        return (\r\n          <DelveryDetails\r\n            handleBack={() => {\r\n              setHideButton(false);\r\n              handleBack();\r\n            }}\r\n            handleNext={() => {\r\n              setHideButton(false);\r\n              handleNext();\r\n            }}\r\n            setAdrress={deliveryAddress => handleSetAddress(deliveryAddress)}\r\n          />\r\n        );\r\n      case 3:\r\n        // TODO fix div style to look like outlined textarea\r\n        return (\r\n          <div\r\n            dangerouslySetInnerHTML={{ __html: termsAndConditions }}\r\n            style={{ width: '100%', maxHeight: '400px', overflowY: 'scroll' }}\r\n          />\r\n        );\r\n      case 4:\r\n        return <StripeButton address={address} totalPayment={totalForPayment} />;\r\n      default:\r\n        return 'Unknown Step';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Elements stripe={stripePromise}>\r\n      <Stepper activeStep={activeStep} orientation=\"vertical\">\r\n        {steps.map((label, index) => (\r\n          <Step key={label}>\r\n            <StepLabel>{label}</StepLabel>\r\n            <StepContent>\r\n              <Typography>{stepsContent(index)}</Typography>\r\n              <div className={classes.actionsContainer}>\r\n                <div>\r\n                  {hideButton ? null : (\r\n                    <>\r\n                      <Button\r\n                        disabled={activeStep === 0}\r\n                        onClick={stepButton(activeStep).functionLeft}\r\n                        className={classes.button}\r\n                      >\r\n                        {stepButton(activeStep).labelLeft}\r\n                      </Button>\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={stepButton(activeStep).functionRight}\r\n                        className={classes.button}\r\n                      >\r\n                        {stepButton(activeStep).labelRight}\r\n                      </Button>\r\n                    </>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </StepContent>\r\n          </Step>\r\n        ))}\r\n      </Stepper>\r\n      {activeStep === steps.length && (\r\n        <Paper square elevation={0} className={classes.resetContainer}>\r\n          <Typography>All steps completed - you&apos;re finished</Typography>\r\n          <Button onClick={handleReset} className={classes.button}>\r\n            Reset\r\n          </Button>\r\n        </Paper>\r\n      )}\r\n    </Elements>\r\n  );\r\n};\r\n\r\nCheckout.propTypes = {};\r\n\r\nexport default Checkout;\r\n","import React from 'react';\r\nimport { ThemeProvider } from '@material-ui/core';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Cookies from 'js-cookie';\r\nimport { Route, Switch, useLocation } from 'react-router-dom';\r\nimport ApolloClient from 'apollo-client';\r\nimport { InMemoryCache } from 'apollo-cache-inmemory';\r\nimport { split, HttpLink } from '@apollo/client';\r\nimport { onError } from 'apollo-link-error';\r\nimport { getMainDefinition } from '@apollo/client/utilities';\r\nimport { WebSocketLink } from '@apollo/link-ws';\r\nimport { ApolloProvider } from 'react-apollo';\r\nimport Error from '../components/Error/Error';\r\nimport * as Theme from '../ui/theme';\r\nimport ProductsContextProvider from '../context/ProductsContext';\r\nimport UserContextProvider from '../context/UserContext';\r\nimport Cart from '../components/Cart/Cart';\r\nimport Products from '../components/Products/Products';\r\nimport Appbar from '../components/Appbar/Appbar';\r\nimport Header from '../components/Header/Header';\r\nimport Login from '../components/Login/Login';\r\nimport Checkout from '../components/Checkout/Checkout';\r\nimport { getCart } from '../utils/localStorage';\r\n\r\nconst cache = new InMemoryCache();\r\n\r\nconst httpLink = new HttpLink({\r\n  uri: 'http://localhost:4000/graphql',\r\n  credentials: 'include',\r\n});\r\n\r\nconst wsLink = new WebSocketLink({\r\n  uri: `ws://localhost:4000/graphql`,\r\n  options: {\r\n    reconnect: true,\r\n  },\r\n});\r\n\r\nconst errorLink = onError(({ graphQLErrors, networkError }) => {\r\n  if (graphQLErrors)\r\n    graphQLErrors.map(({ message, locations, path, extensions }) => {\r\n      if (extensions.code === 'UNAUTHENTICATED') {\r\n        Cookies.remove('signedin');\r\n      }\r\n      console.log(`[GraphQL error]: Message: ${message}, Location: ${locations}, Path: ${path}`);\r\n    });\r\n  if (networkError)\r\n    return <Error errorCode={networkError.code} errorMessage={networkError.message} />;\r\n});\r\n\r\nconst splitLink = split(\r\n  ({ query }) => {\r\n    const definition = getMainDefinition(query);\r\n    return definition.kind === 'OperationDefinition' && definition.operation === 'subscription';\r\n  },\r\n  wsLink,\r\n  httpLink\r\n);\r\n\r\nconst client = new ApolloClient({\r\n  link: errorLink.concat(splitLink),\r\n  cache,\r\n  resolvers: {},\r\n  typeDefs: `\r\n    extend type Query {\r\n      limit: Int!\r\n    }\r\n  `,\r\n  connectToDevTools: true,\r\n});\r\n\r\ncache.writeData({\r\n  data: {\r\n    limit: 16,\r\n  },\r\n});\r\n\r\nconst App = () => {\r\n  const location = useLocation();\r\n  const [cartTotal, setCartTotal] = React.useState();\r\n  const [itemsForCheckout, setItemsForCheckout] = React.useState();\r\n  const [totalForPayment, setTotalForPayment] = React.useState();\r\n\r\n  const handleUpdateCartTotal = total => {\r\n    setCartTotal(total);\r\n  };\r\n\r\n  const handleEmptyCart = () => handleUpdateCartTotal(0);\r\n\r\n  const handleChangeToLocalCart = () => handleUpdateCartTotal(getCart().total);\r\n\r\n  const handleSendItemsToCheckout = items => {\r\n    setItemsForCheckout(items);\r\n  };\r\n\r\n  const handleSetTotalForPayment = total => {\r\n    setTotalForPayment(total);\r\n  };\r\n\r\n  return (\r\n    <ApolloProvider client={client}>\r\n      <ProductsContextProvider>\r\n        <UserContextProvider>\r\n          <CssBaseline />\r\n          <ThemeProvider theme={Theme.default}>\r\n            <Appbar\r\n              updateEmptyLocalCart={handleEmptyCart}\r\n              changeToLocalCart={handleChangeToLocalCart}\r\n              cartTotal={cartTotal}\r\n            />\r\n            {location.pathname === '/' ? <Header /> : null}\r\n            <Switch>\r\n              <Route\r\n                exact\r\n                path=\"/\"\r\n                render={props => <Products updateTotal={handleUpdateCartTotal} {...props} />}\r\n              />\r\n              <Route path=\"/category/:id\" component={Products} />\r\n              <Route\r\n                path=\"/cart\"\r\n                render={props => (\r\n                  <Cart\r\n                    updateCartTotal={handleUpdateCartTotal}\r\n                    itemsForCheckout={handleSendItemsToCheckout}\r\n                    totalForPayment={handleSetTotalForPayment}\r\n                    {...props}\r\n                  />\r\n                )}\r\n              />\r\n              <Route\r\n                path=\"/checkout\"\r\n                // render={() => (getUser() ? <Cart /> : <Redirect to=\"/login/\" />)}\r\n                render={props => (\r\n                  <Checkout items={itemsForCheckout} totalForPayment={totalForPayment} {...props} />\r\n                )}\r\n              />\r\n              <Route path=\"/login/\" component={Login} />\r\n            </Switch>\r\n          </ThemeProvider>\r\n        </UserContextProvider>\r\n      </ProductsContextProvider>\r\n    </ApolloProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\r\n    ),\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.',\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport App from './containers/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <Router>\r\n    <App />\r\n  </Router>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}